// Code generated by goyacc -o parser/parser.go parser/parser.go.y. DO NOT EDIT.

//line parser/parser.go.y:2
package parser

import __yyfmt__ "fmt"

//line parser/parser.go.y:2

import (
	"fmt"
	"github.com/imdario/mergo"
	"github.com/kota65535/sql-parser/lexer"
	"strings"
)

//line parser/parser.go.y:12
type yySymType struct {
	yys                        int
	empty                      struct{}
	statements                 []Statement
	statement                  Statement
	partitionDefinitionList    []PartitionDefinition
	subpartitionDefinitionList []SubpartitionDefinition
	keyPartList                []KeyPart
	list                       []interface{}
	item                       interface{}
	stringList                 []string
	stringItem                 string
	keyword                    bool
	token                      *lexer.Token
}

const LP = 57346
const RP = 57347
const COMMA = 57348
const SEMICOLON = 57349
const EQ = 57350
const GT = 57351
const GTE = 57352
const LT = 57353
const LTE = 57354
const NE = 57355
const NSEQ = 57356
const AND = 57357
const OR = 57358
const XOR = 57359
const IS = 57360
const DOT = 57361
const NOT = 57362
const PIPE = 57363
const BIT_AND = 57364
const RSHIFT = 57365
const LSHIFT = 57366
const PLUS = 57367
const MINUS = 57368
const MULT = 57369
const DIV = 57370
const MOD = 57371
const HAT = 57372
const LOCAL_VAR = 57373
const GLOBAL_VAR = 57374
const TILDE = 57375
const EXCL = 57376
const QSTN = 57377
const ROW = 57378
const LCB = 57379
const RCB = 57380
const AGAINST = 57381
const CASE = 57382
const WHEN = 57383
const THEN = 57384
const END = 57385
const ELSE = 57386
const IF = 57387
const UNKNOWN = 57388
const CREATE = 57389
const USE = 57390
const TEMPORARY = 57391
const DATABASE = 57392
const SCHEMA = 57393
const TABLE = 57394
const EXISTS = 57395
const DEFAULT = 57396
const CHARSET = 57397
const CHARACTER = 57398
const SET = 57399
const COLLATE = 57400
const ENCRYPTION = 57401
const BIT = 57402
const TINYINT = 57403
const BOOL = 57404
const BOOLEAN = 57405
const SMALLINT = 57406
const MEDIUMINT = 57407
const INT = 57408
const INTEGER = 57409
const BIGINT = 57410
const UNSIGNED = 57411
const ZEROFILL = 57412
const DECIMAL = 57413
const DEC = 57414
const FIXED = 57415
const FLOAT = 57416
const DOUBLE = 57417
const REAL = 57418
const CHAR = 57419
const VARCHAR = 57420
const BINARY = 57421
const VARBINARY = 57422
const TINYBLOB = 57423
const TINYTEXT = 57424
const BLOB = 57425
const TEXT = 57426
const MEDIUMBLOB = 57427
const MEDIUMTEXT = 57428
const LONGBLOB = 57429
const LONGTEXT = 57430
const ENUM = 57431
const DATE = 57432
const TIME = 57433
const DATETIME = 57434
const TIMESTAMP = 57435
const YEAR = 57436
const JSON = 57437
const GEOMETRY = 57438
const POINT = 57439
const LINESTRING = 57440
const POLYGON = 57441
const MULTIPOINT = 57442
const MULTILINESTRING = 57443
const MULTIPOLYGON = 57444
const GEOMETRYCOLLECTION = 57445
const NULL = 57446
const VISIBLE = 57447
const INVISIBLE = 57448
const AUTO_INCREMENT = 57449
const UNIQUE = 57450
const PRIMARY = 57451
const KEY = 57452
const CURRENT_TIMESTAMP = 57453
const GENERATED = 57454
const ALWAYS = 57455
const AS = 57456
const VIRTUAL = 57457
const STORED = 57458
const SRID = 57459
const INDEX = 57460
const ASC = 57461
const DESC = 57462
const USING = 57463
const FULLTEXT = 57464
const KEY_BLOCK_SIZE = 57465
const WITH = 57466
const PARSER = 57467
const CONSTRAINT = 57468
const FOREIGN = 57469
const REFERENCES = 57470
const MATCH = 57471
const ON_DELETE = 57472
const ON_UPDATE = 57473
const CASCADE = 57474
const RESTRICT = 57475
const NO_ACTION = 57476
const CHECK = 57477
const ENFORCED = 57478
const NOT_ENFORCED = 57479
const AUTOEXTENDED_SIZE = 57480
const AVG_ROW_LENGTH = 57481
const CHECKSUM = 57482
const COMMENT = 57483
const COMPRESSION = 57484
const CONNECTION = 57485
const DELAY_KEY_WRITE = 57486
const DATA = 57487
const DIRECTORY = 57488
const ENGINE = 57489
const ENGINE_ATTRIBUTE = 57490
const INSERT_METHOD = 57491
const MAX_ROWS = 57492
const MIN_ROWS = 57493
const PACK_KEYS = 57494
const PASSWORD = 57495
const ROW_FORMAT = 57496
const SECONDARY_ENGINE_ATTRIBUTE = 57497
const STATS_AUTO_RECALC = 57498
const STATS_PERSISTENT = 57499
const STATS_SAMPLE_PAGES = 57500
const TABLESPACE = 57501
const STORAGE = 57502
const UNION = 57503
const INT_NUM = 57504
const FLOAT_NUM = 57505
const BIT_NUM = 57506
const BIT_STR = 57507
const HEX_NUM = 57508
const HEX_STR = 57509
const STRING = 57510
const IDENTIFIER = 57511
const QUOTED_IDENTIFIER = 57512
const TRUE = 57513
const FALSE = 57514
const EXPRESSION = 57515
const PARTITION = 57516
const BY = 57517
const PARTITIONS = 57518
const Subpartition = 57519
const LINEAR = 57520
const HASH = 57521
const COLUMNS = 57522
const ALGORITHM = 57523
const RANGE = 57524
const LIST = 57525
const SUBPARTITIONS = 57526
const SUBPARTITION = 57527
const VALUES = 57528
const LESS = 57529
const THAN = 57530
const MAXVALUE = 57531
const IN = 57532
const NATURAL = 57533
const LANGUAGE = 57534
const MODE = 57535
const QUERY = 57536
const EXPANSION = 57537
const SOUNDS = 57538
const LIKE = 57539
const BETWEEN = 57540
const REGEXP = 57541
const INTERVAL = 57542
const MICROSECOND = 57543
const SECOND = 57544
const MINUTE = 57545
const HOUR = 57546
const DAY = 57547
const WEEK = 57548
const MONTH = 57549
const QUARTER = 57550
const SECOND_MICROSECOND = 57551
const MINUTE_MICROSECOND = 57552
const MINUTE_SECOND = 57553
const HOUR_MICROSECOND = 57554
const HOUR_SECOND = 57555
const HOUR_MINUTE = 57556
const DAY_MICROSECOND = 57557
const DAY_SECOND = 57558
const DAY_MINUTE = 57559
const DAY_HOUR = 57560
const YEAR_MONTH = 57561
const CURRENT_USER = 57562
const CURRENT_DATE = 57563
const CURRENT_ROLE = 57564
const UTC_DATE = 57565
const CURRENT_TIME = 57566
const LOCALTIME = 57567
const LOCALTIMESTAMP = 57568
const UTC_TIME = 57569
const UTC_TIMESTAMP = 57570

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LP",
	"RP",
	"COMMA",
	"SEMICOLON",
	"EQ",
	"GT",
	"GTE",
	"LT",
	"LTE",
	"NE",
	"NSEQ",
	"AND",
	"OR",
	"XOR",
	"IS",
	"DOT",
	"NOT",
	"PIPE",
	"BIT_AND",
	"RSHIFT",
	"LSHIFT",
	"PLUS",
	"MINUS",
	"MULT",
	"DIV",
	"MOD",
	"HAT",
	"LOCAL_VAR",
	"GLOBAL_VAR",
	"TILDE",
	"EXCL",
	"QSTN",
	"ROW",
	"LCB",
	"RCB",
	"AGAINST",
	"CASE",
	"WHEN",
	"THEN",
	"END",
	"ELSE",
	"IF",
	"UNKNOWN",
	"CREATE",
	"USE",
	"TEMPORARY",
	"DATABASE",
	"SCHEMA",
	"TABLE",
	"EXISTS",
	"DEFAULT",
	"CHARSET",
	"CHARACTER",
	"SET",
	"COLLATE",
	"ENCRYPTION",
	"BIT",
	"TINYINT",
	"BOOL",
	"BOOLEAN",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"UNSIGNED",
	"ZEROFILL",
	"DECIMAL",
	"DEC",
	"FIXED",
	"FLOAT",
	"DOUBLE",
	"REAL",
	"CHAR",
	"VARCHAR",
	"BINARY",
	"VARBINARY",
	"TINYBLOB",
	"TINYTEXT",
	"BLOB",
	"TEXT",
	"MEDIUMBLOB",
	"MEDIUMTEXT",
	"LONGBLOB",
	"LONGTEXT",
	"ENUM",
	"DATE",
	"TIME",
	"DATETIME",
	"TIMESTAMP",
	"YEAR",
	"JSON",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"GEOMETRYCOLLECTION",
	"NULL",
	"VISIBLE",
	"INVISIBLE",
	"AUTO_INCREMENT",
	"UNIQUE",
	"PRIMARY",
	"KEY",
	"CURRENT_TIMESTAMP",
	"GENERATED",
	"ALWAYS",
	"AS",
	"VIRTUAL",
	"STORED",
	"SRID",
	"INDEX",
	"ASC",
	"DESC",
	"USING",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"WITH",
	"PARSER",
	"CONSTRAINT",
	"FOREIGN",
	"REFERENCES",
	"MATCH",
	"ON_DELETE",
	"ON_UPDATE",
	"CASCADE",
	"RESTRICT",
	"NO_ACTION",
	"CHECK",
	"ENFORCED",
	"NOT_ENFORCED",
	"AUTOEXTENDED_SIZE",
	"AVG_ROW_LENGTH",
	"CHECKSUM",
	"COMMENT",
	"COMPRESSION",
	"CONNECTION",
	"DELAY_KEY_WRITE",
	"DATA",
	"DIRECTORY",
	"ENGINE",
	"ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"ROW_FORMAT",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"TABLESPACE",
	"STORAGE",
	"UNION",
	"INT_NUM",
	"FLOAT_NUM",
	"BIT_NUM",
	"BIT_STR",
	"HEX_NUM",
	"HEX_STR",
	"STRING",
	"IDENTIFIER",
	"QUOTED_IDENTIFIER",
	"TRUE",
	"FALSE",
	"EXPRESSION",
	"PARTITION",
	"BY",
	"PARTITIONS",
	"Subpartition",
	"LINEAR",
	"HASH",
	"COLUMNS",
	"ALGORITHM",
	"RANGE",
	"LIST",
	"SUBPARTITIONS",
	"SUBPARTITION",
	"VALUES",
	"LESS",
	"THAN",
	"MAXVALUE",
	"IN",
	"NATURAL",
	"LANGUAGE",
	"MODE",
	"QUERY",
	"EXPANSION",
	"SOUNDS",
	"LIKE",
	"BETWEEN",
	"REGEXP",
	"INTERVAL",
	"MICROSECOND",
	"SECOND",
	"MINUTE",
	"HOUR",
	"DAY",
	"WEEK",
	"MONTH",
	"QUARTER",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"CURRENT_USER",
	"CURRENT_DATE",
	"CURRENT_ROLE",
	"UTC_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_TIME",
	"UTC_TIMESTAMP",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line parser/parser.go.y:3089

//line yacctab:1
var yyExca = [...]int16{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 25,
	1, 9,
	7, 9,
	-2, 456,
	-1, 49,
	1, 236,
	7, 236,
	-2, 456,
	-1, 268,
	135, 168,
	-2, 33,
	-1, 436,
	5, 52,
	6, 52,
	119, 52,
	120, 52,
	-2, 365,
	-1, 438,
	168, 310,
	-2, 314,
	-1, 442,
	168, 308,
	-2, 341,
	-1, 444,
	190, 290,
	197, 290,
	198, 290,
	199, 290,
	-2, 350,
	-1, 546,
	168, 308,
	-2, 328,
	-1, 590,
	168, 308,
	-2, 328,
	-1, 609,
	168, 308,
	-2, 328,
	-1, 645,
	58, 380,
	-2, 361,
	-1, 647,
	58, 380,
	-2, 362,
}

const yyPrivate = 57344

const yyLast = 1368

var yyAct = [...]int16{
	508, 586, 731, 730, 443, 762, 685, 658, 15, 369,
	454, 445, 393, 279, 614, 265, 426, 277, 628, 444,
	15, 547, 565, 435, 351, 34, 459, 350, 334, 495,
	301, 629, 343, 221, 33, 372, 470, 446, 118, 269,
	44, 425, 639, 115, 123, 124, 330, 125, 430, 431,
	635, 774, 114, 528, 760, 374, 414, 637, 636, 638,
	367, 773, 577, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 748, 766, 759, 758, 311, 46, 47,
	743, 318, 756, 744, 723, 763, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 747, 357, 348, 502,
	505, 355, 356, 126, 607, 159, 302, 357, 235, 503,
	236, 686, 340, 16, 17, 129, 232, 222, 222, 696,
	135, 136, 137, 231, 138, 139, 140, 141, 107, 238,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 264, 160, 249, 755, 251,
	143, 223, 142, 497, 498, 257, 227, 618, 619, 294,
	375, 542, 292, 115, 770, 551, 552, 377, 341, 504,
	230, 237, 239, 240, 241, 519, 342, 697, 229, 401,
	247, 390, 389, 245, 246, 252, 253, 254, 255, 728,
	339, 337, 259, 260, 261, 242, 243, 244, 517, 364,
	529, 248, 293, 250, 415, 304, 305, 306, 307, 256,
	309, 258, 276, 272, 314, 315, 278, 578, 238, 388,
	386, 387, 384, 385, 746, 129, 222, 382, 383, 345,
	48, 321, 322, 31, 323, 324, 325, 326, 566, 40,
	39, 32, 37, 38, 382, 383, 120, 21, 516, 395,
	228, 224, 336, 20, 119, 727, 333, 718, 121, 338,
	286, 287, 122, 752, 316, 360, 317, 362, 656, 226,
	30, 349, 320, 313, 40, 39, 432, 227, 94, 433,
	376, 378, 379, 380, 381, 308, 577, 310, 737, 40,
	39, 267, 37, 34, 659, 50, 291, 709, 548, 549,
	550, 358, 359, 398, 36, 16, 17, 293, 363, 13,
	11, 12, 82, 736, 406, 6, 7, 276, 272, 19,
	82, 278, 368, 366, 394, 396, 397, 392, 23, 735,
	69, 548, 549, 550, 400, 26, 436, 437, 69, 402,
	222, 24, 14, 43, 405, 131, 499, 391, 45, 408,
	409, 548, 549, 550, 703, 68, 36, 506, 509, 767,
	768, 35, 22, 68, 8, 421, 491, 492, 423, 513,
	655, 61, 734, 493, 538, 412, 745, 88, 490, 61,
	416, 417, 418, 419, 420, 403, 404, 422, 712, 713,
	424, 654, 655, 407, 543, 544, 410, 88, 413, 514,
	84, 518, 551, 552, 87, 733, 742, 2, 427, 95,
	96, 28, 535, 536, 60, 711, 18, 694, 740, 741,
	84, 515, 60, 520, 87, 693, 742, 526, 525, 95,
	96, 512, 511, 541, 692, 27, 521, 522, 740, 741,
	523, 553, 540, 524, 161, 162, 527, 57, 682, 705,
	67, 464, 266, 55, 563, 57, 609, 584, 67, 600,
	335, 55, 579, 580, 581, 582, 583, 545, 588, 589,
	530, 531, 532, 533, 534, 303, 537, 54, 539, 439,
	620, 587, 548, 549, 550, 54, 592, 548, 549, 550,
	548, 549, 550, 612, 590, 546, 585, 399, 332, 329,
	319, 593, 42, 548, 549, 550, 604, 540, 739, 720,
	354, 225, 611, 659, 117, 556, 557, 558, 559, 560,
	561, 562, 596, 608, 597, 554, 610, 116, 603, 617,
	295, 602, 275, 594, 595, 274, 177, 209, 601, 207,
	205, 202, 9, 624, 10, 436, 437, 449, 738, 732,
	630, 631, 632, 501, 500, 234, 233, 263, 262, 76,
	634, 75, 74, 73, 72, 71, 70, 626, 625, 66,
	65, 64, 622, 63, 623, 62, 563, 633, 59, 652,
	58, 621, 627, 56, 53, 52, 653, 640, 641, 642,
	643, 644, 646, 648, 649, 650, 651, 51, 645, 647,
	496, 616, 615, 429, 428, 282, 281, 280, 344, 681,
	312, 540, 540, 365, 683, 271, 270, 29, 591, 690,
	469, 687, 468, 461, 460, 447, 660, 617, 689, 555,
	128, 127, 691, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 695, 708, 706, 698, 657, 688, 700,
	458, 726, 464, 725, 457, 440, 699, 704, 701, 702,
	370, 710, 373, 371, 722, 707, 78, 77, 441, 328,
	327, 331, 361, 450, 451, 411, 606, 605, 353, 462,
	463, 452, 442, 448, 455, 456, 352, 714, 466, 347,
	346, 133, 132, 483, 130, 113, 112, 111, 473, 110,
	109, 31, 474, 471, 494, 613, 90, 168, 167, 166,
	165, 719, 171, 170, 169, 164, 163, 49, 268, 108,
	721, 724, 729, 25, 715, 717, 106, 453, 548, 549,
	550, 41, 434, 750, 761, 751, 749, 684, 472, 484,
	753, 485, 475, 599, 598, 5, 757, 4, 3, 1,
	0, 0, 375, 0, 80, 764, 0, 0, 765, 377,
	0, 0, 0, 0, 769, 88, 0, 0, 0, 0,
	94, 0, 0, 772, 771, 750, 0, 465, 0, 0,
	0, 754, 0, 0, 0, 79, 81, 83, 84, 85,
	86, 89, 87, 0, 91, 92, 93, 95, 96, 97,
	98, 99, 100, 101, 102, 103, 104, 669, 105, 0,
	238, 388, 386, 387, 384, 385, 0, 438, 17, 382,
	383, 134, 0, 716, 0, 0, 0, 0, 510, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 467, 482,
	481, 480, 479, 478, 477, 476, 0, 0, 0, 0,
	0, 464, 0, 0, 0, 0, 0, 0, 486, 487,
	488, 489, 376, 378, 379, 380, 381, 441, 0, 0,
	0, 0, 450, 451, 0, 0, 0, 0, 462, 463,
	452, 442, 448, 455, 456, 0, 0, 466, 0, 0,
	0, 0, 483, 0, 0, 0, 0, 473, 0, 0,
	0, 474, 471, 0, 661, 662, 663, 664, 665, 666,
	667, 668, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 0, 0, 0, 453, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 472, 484, 0,
	485, 475, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 0, 0, 0, 0, 464, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 441, 0, 0, 0, 465, 450, 451, 0,
	0, 0, 0, 462, 463, 452, 442, 448, 455, 456,
	0, 0, 466, 0, 0, 0, 0, 483, 0, 0,
	0, 0, 473, 0, 0, 0, 474, 471, 0, 238,
	388, 386, 387, 384, 385, 0, 438, 17, 382, 383,
	0, 0, 0, 0, 0, 0, 0, 507, 0, 0,
	0, 453, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 484, 0, 485, 475, 467, 482, 481,
	480, 479, 478, 477, 476, 0, 375, 0, 0, 0,
	0, 464, 0, 377, 0, 0, 0, 486, 487, 488,
	489, 376, 378, 379, 380, 381, 0, 0, 0, 0,
	0, 465, 450, 451, 0, 0, 0, 0, 462, 463,
	452, 564, 448, 455, 456, 0, 0, 466, 0, 0,
	0, 0, 483, 0, 284, 0, 0, 473, 0, 0,
	0, 474, 471, 0, 238, 388, 386, 387, 384, 385,
	0, 438, 17, 382, 383, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 453, 0, 285, 0,
	0, 0, 0, 0, 0, 0, 0, 472, 484, 0,
	485, 475, 467, 482, 481, 480, 479, 478, 477, 476,
	0, 375, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 486, 487, 488, 489, 376, 378, 379, 380,
	381, 0, 0, 0, 0, 0, 465, 0, 283, 286,
	287, 273, 288, 290, 289, 0, 299, 0, 300, 296,
	297, 298, 31, 0, 0, 0, 0, 90, 0, 0,
	122, 0, 292, 0, 0, 294, 0, 0, 0, 238,
	388, 386, 387, 384, 385, 291, 438, 17, 382, 383,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 80, 0, 467, 482, 481,
	480, 479, 478, 477, 476, 0, 88, 0, 0, 0,
	0, 94, 0, 0, 0, 0, 0, 486, 487, 488,
	489, 376, 378, 379, 380, 381, 79, 81, 83, 84,
	85, 86, 89, 87, 0, 91, 92, 93, 95, 96,
	97, 98, 99, 100, 101, 102, 103, 104, 0, 105,
	211, 190, 0, 0, 200, 201, 212, 213, 203, 204,
	214, 215, 206, 0, 0, 216, 217, 218, 208, 219,
	220, 210, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 172, 173, 174, 175, 176, 191,
	192, 193, 194, 195, 196, 197, 198, 199,
}

var yyPact = [...]int16{
	268, 357, -1000, -1000, -1000, -1000, 260, -56, 268, 208,
	195, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -56,
	308, 208, 179, 188, -56, 179, -1000, -1000, -1000, -1000,
	184, -1000, -1000, 498, 324, -1000, 340, 340, 340, 173,
	-1000, 1158, 136, -56, -56, -1000, -56, -54, -1000, 647,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 340,
	340, 340, 234, 340, 340, 340, 340, 6, 4, 340,
	340, 340, 340, 340, 340, 340, 340, 340, 340, 340,
	340, 340, 340, 340, -56, 340, 439, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1264, -56, -56, 142, -1000,
	-1000, 60, -56, -1000, -1000, -1000, -1000, -52, -1000, -1000,
	-1000, -1000, -1000, -68, -65, -33, -33, -33, -33, -54,
	-54, -54, 340, 340, -33, -54, -56, -54, -56, -33,
	-33, -33, -33, -54, -56, -54, -33, -33, -33, -15,
	448, -1000, 136, 1094, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 471, 471, 471, 471, 471, 471, 471,
	471, -1000, 219, 471, 471, -1000, 219, -1000, 219, 496,
	496, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	471, 471, -1000, 471, 471, 471, 471, 495, 494, 494,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 456, -1000, 456, 81, -56, 80, -61, 58, -1000,
	-1000, -1000, 171, -87, -1000, -33, -81, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -54, -54, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -56, -1000, -56, -1000, 1094, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 95, 56, -1000, -1000, 72, -1000,
	71, -54, -56, 21, 192, 493, -1000, -1000, -33, 66,
	-1000, -1000, -1000, -33, -1000, -1000, -1000, 219, 219, -1000,
	-1000, 171, -1000, -56, -1000, 219, 171, 171, 219, -54,
	219, -1000, 135, 135, 135, 135, 135, 135, -1000, -33,
	135, -1000, -33, 135, 155, 962, 155, 456, 456, -56,
	17, -1000, -1000, -1000, -1000, -56, -85, -1000, -66, -1000,
	-1000, -1000, -1000, -1000, -10, 857, 648, -1000, -1000, -1000,
	-1000, 426, -1000, -1000, -1000, -1000, -1000, 962, 471, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 456, -1000, -1000, 144, -1000, -1000, -1000, 962,
	-1000, 61, 418, 171, 171, -1000, -1000, 171, -1000, -1000,
	171, 422, -1000, 171, 130, -1000, 130, 130, 130, 130,
	130, 407, 130, 368, 130, 155, -1000, -1000, -1000, -1000,
	-1000, -1000, -56, 36, 389, -1000, 491, 283, -1000, 962,
	507, -1000, 1067, -1000, 42, 159, -1000, -1000, -1000, -1000,
	1067, 1067, 1067, 1067, -1000, 447, -56, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 962, 448, 962, 962, 490, 482,
	471, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	155, 155, 155, 456, 17, -1000, -1000, -1000, -1000, -1000,
	455, -1000, -33, -71, 962, -77, 336, 448, 452, 336,
	448, -56, -1000, 488, -1000, 28, -1000, -1000, 475, -1000,
	-1000, -1000, -1000, -1000, -1000, -54, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -33, -1000, -33, -1000,
	-1000, -1000, -56, -1000, 962, 46, 962, -1000, 962, 962,
	962, -1000, -1000, 336, 266, 1067, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 159, 1067, -140, -155, 1067, 1067, 1067,
	1067, 1067, 1067, 1067, 1067, 1067, 1067, -1000, -56, 159,
	159, 159, 159, -1000, 962, 386, 336, 229, 472, 713,
	962, -1000, 443, -1000, 155, 155, 34, -1000, -1000, -1000,
	-63, -1000, -1000, -1000, 336, 448, -1000, 340, -1000, 962,
	-1000, -1000, -1000, 28, -1000, -1000, -1000, -1000, -56, 192,
	-1000, -1000, 429, 420, -1000, -1000, -1000, 418, 412, 364,
	336, 336, 336, 73, -1000, 447, 1067, 1067, 1067, 1067,
	612, 612, 612, 612, 612, -1000, 612, -1000, 612, 612,
	612, 612, -1000, 316, -1000, 962, 445, 253, -1000, 962,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 410, -1000, -1000, 383, -1000, -56, -1000, -33, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 808,
	159, 612, 612, -1000, 336, 1067, 214, -1000, -1000, 962,
	467, -1000, -1000, -63, -102, -1000, 1067, 65, -1000, 336,
	962, -1000, 279, -107, -1000, 371, -1000, 33, -121, 336,
	259, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -56,
	340, 1, -1000, -106, 962, -1000, -116, -118, -141, -1000,
	-1000, -1000, -100, -1000, -56, -1000, 962, 336, -119, -1000,
	-1000, 354, -1000, -56, -1000, 336, 40, -1000, -100, 279,
	-133, -1000, 279, -144, -1000,
}

var yyPgo = [...]int16{
	0, 749, 407, 748, 747, 745, 744, 743, 737, 736,
	735, 734, 28, 732, 731, 726, 723, 335, 128, 719,
	718, 39, 717, 295, 716, 715, 714, 713, 712, 710,
	709, 708, 707, 17, 705, 14, 52, 704, 29, 700,
	699, 41, 16, 697, 696, 695, 23, 694, 692, 691,
	690, 689, 27, 24, 686, 678, 677, 676, 6, 3,
	2, 5, 81, 675, 15, 672, 10, 31, 18, 46,
	671, 670, 669, 667, 666, 34, 664, 37, 9, 663,
	35, 662, 660, 55, 0, 19, 1, 655, 4, 11,
	654, 653, 651, 650, 647, 7, 645, 644, 631, 630,
	629, 26, 626, 625, 624, 623, 622, 620, 36, 618,
	22, 342, 435, 411, 617, 30, 106, 616, 615, 613,
	49, 77, 610, 32, 608, 607, 606, 605, 33, 21,
	408, 604, 603, 48, 38, 602, 601, 13, 12, 600,
	597, 585, 584, 583, 580, 578, 405, 575, 372, 329,
	573, 571, 570, 569, 313, 288, 566, 565, 564, 563,
	562, 561, 559, 558, 557, 556, 555, 554, 553, 549,
	548, 547, 40, 544, 542, 319, 270, 273, 541, 540,
	539, 537, 536, 56, 53, 535, 532, 530, 527, 514,
	511, 510, 508, 479,
}

var yyR1 = [...]uint8{
	0, 1, 1, 1, 2, 2, 2, 2, 4, 3,
	111, 16, 16, 16, 17, 17, 17, 112, 113, 114,
	5, 75, 75, 14, 15, 15, 18, 18, 18, 18,
	18, 18, 18, 19, 24, 24, 24, 24, 24, 25,
	25, 25, 26, 26, 26, 26, 26, 26, 26, 27,
	28, 28, 115, 115, 116, 69, 69, 70, 71, 71,
	72, 72, 29, 29, 29, 29, 29, 30, 30, 30,
	30, 30, 30, 30, 30, 30, 30, 30, 30, 30,
	30, 31, 32, 32, 32, 32, 32, 32, 32, 32,
	20, 20, 20, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 117, 117, 118, 119,
	119, 119, 120, 120, 121, 121, 122, 123, 123, 124,
	125, 126, 126, 127, 39, 40, 43, 44, 45, 128,
	128, 12, 13, 13, 129, 129, 129, 46, 46, 41,
	41, 41, 42, 42, 42, 42, 42, 130, 131, 132,
	133, 33, 34, 34, 34, 35, 35, 35, 135, 136,
	137, 138, 138, 138, 138, 138, 138, 36, 134, 134,
	134, 37, 37, 37, 38, 139, 139, 22, 22, 22,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 140, 141,
	142, 143, 146, 144, 145, 148, 149, 147, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 73, 163, 163, 164, 74, 47, 47, 48, 49,
	49, 49, 49, 165, 165, 166, 50, 50, 51, 51,
	167, 167, 168, 52, 53, 54, 54, 55, 55, 56,
	56, 57, 6, 6, 7, 8, 8, 58, 76, 76,
	59, 59, 59, 60, 60, 60, 60, 60, 60, 60,
	170, 169, 9, 9, 10, 11, 11, 61, 172, 172,
	110, 110, 77, 77, 77, 77, 77, 77, 77, 78,
	78, 82, 82, 79, 79, 80, 81, 83, 98, 98,
	99, 63, 63, 62, 84, 84, 65, 65, 64, 171,
	171, 100, 100, 100, 100, 100, 100, 100, 68, 68,
	66, 67, 67, 86, 86, 86, 86, 86, 86, 86,
	193, 193, 87, 87, 87, 88, 88, 88, 88, 88,
	88, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 89, 89, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	89, 90, 91, 91, 92, 92, 92, 92, 93, 94,
	94, 96, 96, 97, 95, 101, 102, 102, 102, 102,
	102, 102, 102, 102, 102, 102, 102, 102, 102, 102,
	102, 102, 102, 102, 102, 102, 103, 103, 105, 105,
	105, 109, 109, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 107,
	107, 107, 107, 108, 108, 108, 108, 108, 108, 104,
	173, 173, 174, 174, 175, 175, 176, 176, 177, 177,
	178, 178, 179, 179, 180, 180, 180, 181, 181, 182,
	182, 183, 183, 184, 184, 185, 185, 186, 186, 187,
	187, 188, 188, 189, 189, 190, 190, 191, 191, 192,
	192,
}

var yyR2 = [...]int8{
	0, 0, 1, 3, 0, 1, 1, 1, 2, 5,
	1, 0, 1, 2, 1, 1, 1, 4, 4, 4,
	8, 1, 3, 3, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 4, 1, 4, 4, 4, 4, 4,
	4, 4, 0, 1, 3, 0, 1, 5, 0, 1,
	3, 5, 1, 2, 2, 2, 2, 4, 4, 2,
	2, 1, 3, 2, 4, 1, 3, 1, 3, 4,
	4, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 1,
	3, 2, 1, 1, 0, 1, 2, 0, 1, 2,
	4, 1, 1, 2, 4, 4, 5, 5, 6, 0,
	1, 3, 1, 3, 0, 1, 1, 3, 2, 0,
	1, 2, 1, 1, 1, 1, 1, 3, 2, 3,
	2, 4, 0, 1, 2, 1, 1, 1, 2, 2,
	2, 1, 2, 1, 2, 1, 1, 4, 0, 1,
	2, 0, 1, 2, 1, 1, 1, 0, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 0, 1, 2, 3, 0, 1, 5, 3,
	3, 3, 3, 0, 1, 2, 0, 1, 3, 3,
	0, 1, 2, 3, 4, 2, 3, 2, 3, 0,
	1, 3, 0, 1, 3, 1, 3, 5, 4, 3,
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	3, 2, 0, 1, 3, 1, 3, 3, 0, 1,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 1,
	1, 1, 3, 3, 1, 1, 1, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	3, 1, 3, 3, 3, 3, 2, 4, 4, 1,
	1, 1, 4, 3, 1, 4, 6, 4, 4, 4,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 1, 1, 3, 1, 1,
	2, 2, 2, 2, 2, 1, 2, 4, 1, 1,
	1, 7, 0, 1, 4, 7, 3, 3, 5, 1,
	2, 0, 1, 2, 4, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 2,
	2, 0, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	0, 1, 1, 1, 0, 3, 0, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 1, 2, 1, 2, 3,
	1, 1, 1, 2, 2, 2, 2, 0, 1, 2,
	1,
}

var yyChk = [...]int16{
	-1000, -1, -2, -3, -4, -5, 47, 48, 7, -174,
	-173, 50, 51, 49, -111, -84, 169, 170, -2, -175,
	45, 52, -111, 20, -175, -16, -17, -112, -113, -114,
	-176, 54, 53, -75, -84, -17, -177, 58, 59, 56,
	55, -14, 4, 19, -172, 8, -172, -172, 57, -22,
	-23, -140, -141, -142, -112, -113, -143, -146, -144, -145,
	-148, -149, -147, -150, -151, -152, -153, -130, -154, -155,
	-156, -157, -158, -159, -160, -161, -162, -73, -74, 138,
	107, 139, -176, 140, 141, 142, 143, 145, 118, 144,
	59, 147, 148, 149, 123, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 161, -15, -18, -19, -39,
	-40, -43, -44, -45, -36, -84, -188, -189, -134, 118,
	110, 122, 126, -84, -84, -84, -83, -98, -99, 169,
	-47, -23, -48, -49, 174, -172, -172, -172, -172, -172,
	-172, -172, 146, 146, -172, -172, -172, -172, -172, -172,
	-172, -172, -172, -172, -172, -172, -172, -172, -172, -84,
	-172, 5, 6, -24, -25, -29, -30, -31, -32, -26,
	-27, -28, 90, 91, 92, 93, 94, -182, 78, 79,
	80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
	57, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	60, 61, -178, 64, 65, -179, 68, -180, 74, -181,
	77, 56, 62, 63, 66, 67, 71, 72, 73, 75,
	76, -128, -84, -128, 109, -190, 127, 135, 108, 118,
	110, -84, 168, -165, -166, 176, 175, -80, 162, -80,
	-80, -80, -83, -83, -83, -172, -172, -80, -83, -84,
	-83, -84, -80, -80, -80, -80, -83, -84, -83, -80,
	-80, -80, -163, -164, 160, -64, 4, -18, -20, -21,
	-117, -118, -120, 107, -185, -186, -133, -33, -36, -137,
	-125, -126, -127, 104, 20, 54, 105, 106, 108, 110,
	109, 141, 128, -134, 131, -187, 115, 116, 117, 112,
	114, -115, -116, 4, -115, -115, -115, -115, -116, -115,
	-116, -121, -122, -177, -115, -115, -121, -121, -62, 4,
	-62, -115, -115, -115, -115, -115, -115, -71, -72, 4,
	-69, -70, 4, -69, -12, 4, -12, 110, -128, 110,
	173, 110, 118, -123, -124, 58, -50, -51, 185, -80,
	-52, -53, -54, -55, -191, 182, 183, 178, -83, -83,
	-84, -65, -84, -21, 104, -119, -77, 4, -108, -78,
	-82, -79, -80, -81, -83, 104, 224, 111, 225, 226,
	227, 228, 171, 172, 166, 167, 164, 165, 163, 110,
	110, -83, -75, -138, 132, 57, 133, 134, 111, 4,
	-80, 113, -80, -121, -121, -123, -84, -121, -123, -123,
	-121, -63, -83, -121, -183, 69, -183, -183, -183, -183,
	-183, -80, -183, -80, -183, -41, -42, -130, -131, -132,
	-133, -120, 121, 124, -13, -46, -84, -86, 169, -193,
	-87, 20, 34, -88, -85, -89, -77, -103, 35, -171,
	25, 26, 33, 79, -66, 36, 37, -90, -93, -101,
	-104, -105, 31, 32, 4, 129, 40, 200, -106, -107,
	-108, 55, 90, 50, 54, 94, 207, 206, 205, 204,
	203, 202, 201, 45, 91, 93, 220, 221, 222, 223,
	-41, -12, -12, -128, -37, -38, -139, 136, 137, -84,
	-167, -168, 184, 175, 179, 110, -86, 180, -84, -86,
	180, 6, 5, -86, -115, -12, 104, 54, -86, 114,
	5, -123, -123, -123, -123, 6, 5, -123, -184, 70,
	-184, -184, -184, -184, -184, 5, 6, -184, 6, -184,
	-42, -84, 125, 5, 6, -115, 4, -129, 15, 16,
	17, 119, 120, -86, 18, -100, 8, 9, 10, 11,
	12, 13, 14, -89, 34, -110, 196, 21, 22, 23,
	24, 25, 26, 27, 28, 29, 30, 20, 58, -89,
	-89, -89, -89, -66, -84, -67, -86, -64, -86, -86,
	4, -109, 4, -115, -41, -41, -12, -38, -6, -7,
	4, -80, -52, -53, -86, -56, -57, 181, -64, 4,
	-64, -84, 5, -34, -35, -135, -136, -137, 129, 130,
	5, -83, -80, -80, -84, -46, -129, -80, -68, -67,
	-86, -86, -86, -110, -88, 190, 198, 197, 199, 197,
	-85, -85, -85, -85, -85, -101, -85, -101, -85, -85,
	-85, -85, -84, -86, 5, 6, 39, -94, -95, 41,
	-102, 201, 202, 203, 204, 205, 206, 207, 208, 94,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, -68, 5, -33, -8, -58, 174, -64, -172, -35,
	-84, -138, 5, 5, 5, -78, 46, 104, -66, -85,
	-89, -85, -85, 38, -86, 4, -96, -95, -97, 44,
	-86, 5, 5, 6, -84, -80, 15, -85, 43, -86,
	42, -58, -76, 186, -88, -91, -92, 190, 124, -86,
	-59, -60, -169, -146, -148, -149, -154, -155, -170, -192,
	159, 160, 147, 187, 190, 5, 191, 63, 194, -9,
	-60, -10, 4, -84, -172, 147, 188, -86, 192, 193,
	195, -11, -61, 185, -84, -86, 193, 5, 6, -84,
	124, -61, -59, 194, 195,
}

var yyDef = [...]int16{
	1, -2, 2, 5, 6, 7, 450, 0, 4, 454,
	0, 452, 453, 451, 8, 10, 314, 315, 3, 0,
	0, 454, 11, 0, 0, -2, 12, 14, 15, 16,
	0, 457, 455, 0, 21, 13, 288, 288, 288, 0,
	459, 177, 168, 0, 0, 289, 0, 308, 458, -2,
	178, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 288,
	288, 288, 0, 288, 288, 288, 288, 0, 0, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 0, 288, 0, 24, 26, 27,
	28, 29, 30, 31, 32, 0, 129, 129, 0, 481,
	482, 0, 169, 22, 17, 18, 19, 0, 309, 310,
	20, 179, 237, 243, 0, 0, 0, 0, 0, 308,
	308, 308, 288, 288, 0, 308, 0, 308, 0, 0,
	0, 0, 0, 308, 0, 308, 0, 0, 0, 232,
	0, 23, 168, 90, 34, 35, 36, 37, 38, 39,
	40, 41, 62, 52, 52, 52, 52, 52, 0, 52,
	0, 71, 114, 52, 52, 75, 114, 77, 114, 0,
	0, 81, 82, 83, 84, 85, 86, 87, 88, 89,
	52, 52, 44, 52, 52, 52, 52, 58, 55, 55,
	469, 470, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 0, 130, 0, 0, 129, 0, 0, 0, 483,
	484, 170, 117, 246, 244, 0, 487, 208, 305, 209,
	210, 211, 212, 213, 214, 308, 308, 217, 218, 219,
	220, 221, 147, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 233, 0, 235, 0, 25, -2, 91,
	93, 94, 95, 96, 97, 98, 99, 100, 101, 102,
	103, 104, 105, 106, 0, 308, 112, 113, 475, 477,
	0, 308, 0, 0, 0, 0, 121, 122, 0, 0,
	480, 63, 53, 0, 64, 65, 66, 114, 114, 69,
	70, 117, 115, 0, 73, 114, 117, 117, 114, 308,
	114, 42, 471, 471, 471, 471, 471, 471, 59, 0,
	471, 56, 0, 471, 139, 308, 139, 0, 0, 129,
	171, 485, 486, 307, 118, 0, 250, 247, 0, 245,
	239, 240, 241, 242, 0, 308, 308, 488, 215, 216,
	234, 0, 316, 92, 107, 108, 109, 308, 52, 292,
	293, 294, 295, 296, 297, 298, 443, 444, 445, 446,
	447, 448, 299, 300, 301, 302, 303, 304, 306, 476,
	478, 150, 0, 160, 161, 0, 163, 165, 166, 308,
	123, 0, 0, 117, 117, 72, 116, 117, 76, 78,
	117, 0, 311, 117, 473, 472, 473, 473, 473, 473,
	473, 0, 473, 0, 473, 124, 140, 142, 143, 144,
	145, 146, 0, 0, 0, 132, -2, 134, -2, 308,
	339, 340, -2, 344, -2, 363, 364, 366, 368, 369,
	308, 308, 308, 308, 375, 0, 0, 378, 379, 380,
	416, 417, 319, 320, 308, 0, 308, 308, 0, 421,
	52, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 437, 438, 439, 440, 441, 442,
	125, 139, 139, 0, 167, 172, 174, 175, 176, 119,
	262, 251, 0, 487, 308, 259, 255, 0, 365, 257,
	0, 0, 318, 0, 111, 152, 162, 164, 0, 479,
	54, 67, 68, 74, 79, 308, 313, 80, 43, 474,
	45, 46, 47, 48, 49, 60, 0, 50, 0, 51,
	141, 148, 0, 131, 308, 134, -2, 138, 308, 308,
	308, 135, 136, 336, 290, 308, 321, 322, 323, 324,
	325, 326, 327, 373, 308, 0, 0, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 291, 0, 370,
	371, 372, 374, 376, 308, 0, 331, 0, 0, 0,
	-2, 419, 0, 420, 126, 127, 0, 173, 238, 263,
	0, 252, 248, 249, 253, 0, 260, 288, 256, -2,
	258, 317, 110, 151, 153, 155, 156, 157, 0, 0,
	120, 312, 0, 0, 149, 133, 137, 295, 0, 329,
	333, 334, 335, 0, 343, 0, 308, 308, 308, 308,
	351, 352, 353, 354, 355, -2, 356, -2, 357, 358,
	359, 360, 367, 0, 330, 308, 0, 391, 389, 308,
	395, 396, 397, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 0, 422, 128, 0, 265, 0, 254, 0, 154,
	158, 159, 61, 57, 449, 337, 338, 342, 345, 0,
	348, 349, 347, 377, 332, 308, 0, 390, 392, 308,
	0, 418, 264, 0, 0, 261, 308, 382, 388, 393,
	308, 266, 270, 0, 346, 0, 383, 0, 0, 394,
	282, 271, 273, 274, 275, 276, 277, 278, 279, 0,
	288, 0, 490, 0, 308, 381, 0, 0, 0, 267,
	272, 283, 0, 281, 0, 489, 308, 269, 0, 386,
	387, 0, 285, 0, 280, 268, 384, 284, 0, 270,
	0, 286, 287, 0, 385,
}

var yyTok1 = [...]int8{
	1,
}

var yyTok2 = [...]uint8{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228,
}

var yyTok3 = [...]int8{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := int(yyPact[state])
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && int(yyChk[int(yyAct[n])]) == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || int(yyExca[i+1]) != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := int(yyExca[i])
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = int(yyTok1[0])
		goto out
	}
	if char < len(yyTok1) {
		token = int(yyTok1[char])
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = int(yyTok2[char-yyPrivate])
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = int(yyTok3[i+0])
		if token == char {
			token = int(yyTok3[i+1])
			goto out
		}
	}

out:
	if token == 0 {
		token = int(yyTok2[1]) /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = int(yyPact[yystate])
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = int(yyAct[yyn])
	if int(yyChk[yyn]) == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = int(yyDef[yystate])
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && int(yyExca[xi+1]) == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = int(yyExca[xi+0])
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = int(yyExca[xi+1])
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = int(yyPact[yyS[yyp].yys]) + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = int(yyAct[yyn]) /* simulate a shift of "error" */
					if int(yyChk[yystate]) == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= int(yyR2[yyn])
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = int(yyR1[yyn])
	yyg := int(yyPgo[yyn])
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = int(yyAct[yyg])
	} else {
		yystate = int(yyAct[yyj])
		if int(yyChk[yystate]) != -yyn {
			yystate = int(yyAct[yyg])
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:551
		{
			yyVAL.statements = []Statement{}
			yylex.(*Parser).result = yyVAL.statements
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:556
		{
			yyVAL.statements = []Statement{yyDollar[1].statement}
			yylex.(*Parser).result = yyVAL.statements
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:561
		{
			if yyDollar[3].statement != nil {
				yyDollar[1].statements = append(yyDollar[1].statements, yyDollar[3].statement)
			}
			yyVAL.statements = yyDollar[1].statements
			yylex.(*Parser).result = yyDollar[1].statements
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:571
		{
			yyVAL.statement = nil
		}
	case 5:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:575
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:579
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:583
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 8:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:589
		{
			yyVAL.statement = UseStatement{
				DbName: yyDollar[2].stringItem,
			}
		}
	case 9:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser/parser.go.y:597
		{
			yyVAL.statement = CreateDatabaseStatement{
				IfNotExists:     yyDollar[3].keyword,
				DbName:          yyDollar[4].stringItem,
				DatabaseOptions: yyDollar[5].item.(DatabaseOptions),
			}
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:607
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 11:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:612
		{
			yyVAL.item = DatabaseOptions{}
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:616
		{
			yyVAL.item = yyDollar[1].item
		}
	case 13:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:620
		{
			// TODO: error handling
			merged := yyDollar[1].item.(DatabaseOptions)
			mergo.Merge(&merged, yyDollar[2].item.(DatabaseOptions))
			yyVAL.item = merged
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:629
		{
			yyVAL.item = DatabaseOptions{
				DefaultCharset: yyDollar[1].stringItem,
			}
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:635
		{
			yyVAL.item = DatabaseOptions{
				DefaultCollate: yyDollar[1].stringItem,
			}
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:641
		{
			yyVAL.item = DatabaseOptions{
				DefaultEncryption: yyDollar[1].stringItem,
			}
		}
	case 17:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:649
		{
			yyVAL.stringItem = yyDollar[4].stringItem
		}
	case 18:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:655
		{
			yyVAL.stringItem = yyDollar[4].stringItem
		}
	case 19:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:661
		{
			yyVAL.stringItem = yyDollar[4].stringItem
		}
	case 20:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser/parser.go.y:667
		{
			yyVAL.statement = CreateTableStatement{
				DbName:            yyDollar[5].stringList[0],
				Temporary:         yyDollar[2].keyword,
				IfNotExists:       yyDollar[4].keyword,
				TableName:         yyDollar[5].stringList[1],
				CreateDefinitions: yyDollar[6].list,
				TableOptions:      yyDollar[7].item.(TableOptions),
				Partitions:        yyDollar[8].item.(PartitionConfig),
			}
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:681
		{
			yyVAL.stringList = []string{"", yyDollar[1].stringItem}
		}
	case 22:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:685
		{
			yyVAL.stringList = []string{yyDollar[1].stringItem, yyDollar[3].stringItem}
		}
	case 23:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:691
		{
			yyVAL.list = yyDollar[2].list
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:697
		{
			yyVAL.list = []interface{}{yyDollar[1].item}
		}
	case 25:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:701
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].item)
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:707
		{
			yyVAL.item = yyDollar[1].item.(*ColumnDefinition)
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:711
		{
			yyVAL.item = yyDollar[1].item.(*IndexDefinition)
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:715
		{
			yyVAL.item = yyDollar[1].item.(*FullTextIndexDefinition)
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:719
		{
			yyVAL.item = yyDollar[1].item.(*PrimaryKeyDefinition)
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:723
		{
			yyVAL.item = yyDollar[1].item.(*UniqueKeyDefinition)
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:727
		{
			yyVAL.item = yyDollar[1].item.(*ForeignKeyDefinition)
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:731
		{
			yyVAL.item = yyDollar[1].item.(*CheckConstraintDefinition)
		}
	case 33:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:737
		{
			columnOptions := yyDollar[3].item.(ColumnOptions)
			if columnOptions.Nullability == "" {
				columnOptions.Nullability = "NULL"
			}
			yyVAL.item = &ColumnDefinition{
				ColumnName:    yyDollar[1].stringItem,
				DataType:      yyDollar[2].item,
				ColumnOptions: yyDollar[3].item.(ColumnOptions),
			}
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:751
		{
			yyVAL.item = yyDollar[1].item
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:755
		{
			yyVAL.item = yyDollar[1].item
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:759
		{
			yyVAL.item = yyDollar[1].item
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:763
		{
			yyVAL.item = yyDollar[1].item
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:767
		{
			yyVAL.item = yyDollar[1].item
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:773
		{
			yyVAL.item = yyDollar[1].item
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:777
		{
			yyVAL.item = yyDollar[1].item
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:781
		{
			yyVAL.item = yyDollar[1].item
		}
	case 42:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:787
		{
			yyVAL.item = IntegerType{
				Name:     "bit",
				FieldLen: yyDollar[2].stringItem,
			}
		}
	case 43:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:794
		{
			yyVAL.item = IntegerType{
				Name:     "tinyint",
				FieldLen: yyDollar[2].stringItem,
				Unsigned: yyDollar[3].keyword,
				Zerofill: yyDollar[4].keyword,
			}
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:803
		{
			// Bool type is synonym of tinyint(1)
			yyVAL.item = IntegerType{
				Name:     "tinyint",
				FieldLen: "1",
			}
		}
	case 45:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:811
		{
			yyVAL.item = IntegerType{
				Name:     "smallint",
				FieldLen: yyDollar[2].stringItem,
				Unsigned: yyDollar[3].keyword,
				Zerofill: yyDollar[4].keyword,
			}
		}
	case 46:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:820
		{
			yyVAL.item = IntegerType{
				Name:     "mediumint",
				FieldLen: yyDollar[2].stringItem,
				Unsigned: yyDollar[3].keyword,
				Zerofill: yyDollar[4].keyword,
			}
		}
	case 47:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:829
		{
			yyVAL.item = IntegerType{
				Name:     "int",
				FieldLen: yyDollar[2].stringItem,
				Unsigned: yyDollar[3].keyword,
				Zerofill: yyDollar[4].keyword,
			}
		}
	case 48:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:838
		{
			yyVAL.item = IntegerType{
				Name:     "bigint",
				FieldLen: yyDollar[2].stringItem,
				Unsigned: yyDollar[3].keyword,
				Zerofill: yyDollar[4].keyword,
			}
		}
	case 49:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:849
		{
			fieldLen := ""
			fieldScale := ""
			if len(yyDollar[2].stringList) >= 1 {
				fieldLen = yyDollar[2].stringList[0]
				if len(yyDollar[2].stringList) >= 2 {
					fieldScale = yyDollar[2].stringList[1]
				}
			}
			yyVAL.item = FixedPointType{
				Name:       "decimal",
				FieldLen:   fieldLen,
				FieldScale: fieldScale,
				Unsigned:   yyDollar[3].keyword,
				Zerofill:   yyDollar[4].keyword,
			}
		}
	case 50:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:869
		{
			fieldLen := ""
			fieldScale := ""
			if len(yyDollar[2].stringList) >= 2 {
				fieldLen = yyDollar[2].stringList[0]
				fieldScale = yyDollar[2].stringList[1]
			}
			yyVAL.item = FixedPointType{
				Name:       "float",
				FieldLen:   fieldLen,
				FieldScale: fieldScale,
				Unsigned:   yyDollar[3].keyword,
				Zerofill:   yyDollar[4].keyword,
			}
		}
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:885
		{
			fieldLen := ""
			fieldScale := ""
			if len(yyDollar[2].stringList) >= 2 {
				fieldLen = yyDollar[2].stringList[0]
				fieldScale = yyDollar[2].stringList[1]
			}
			yyVAL.item = FixedPointType{
				Name:       "double",
				FieldLen:   fieldLen,
				FieldScale: fieldScale,
				Unsigned:   yyDollar[3].keyword,
				Zerofill:   yyDollar[4].keyword,
			}
		}
	case 52:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:902
		{
			yyVAL.stringItem = ""
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:906
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:912
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 55:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:917
		{
			yyVAL.stringList = []string{}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:921
		{
			yyVAL.stringList = yyDollar[1].stringList
		}
	case 57:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser/parser.go.y:927
		{
			yyVAL.stringList = []string{yyDollar[2].stringItem, yyDollar[4].stringItem}
		}
	case 58:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:932
		{
			yyVAL.stringList = []string{}
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:936
		{
			yyVAL.stringList = yyDollar[1].stringList
		}
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:942
		{
			yyVAL.stringList = []string{yyDollar[2].stringItem}
		}
	case 61:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser/parser.go.y:946
		{
			yyVAL.stringList = []string{yyDollar[2].stringItem, yyDollar[4].stringItem}
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:952
		{
			yyVAL.item = DateAndTimeType{
				Name: "date",
			}
		}
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:958
		{
			fieldLen := ""
			if yyDollar[2].stringItem != "" {
				fieldLen = yyDollar[2].stringItem
			}
			yyVAL.item = DateAndTimeType{
				Name:     "time",
				FieldLen: fieldLen,
			}
		}
	case 64:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:969
		{
			fieldLen := ""
			if yyDollar[2].stringItem != "" {
				fieldLen = yyDollar[2].stringItem
			}
			yyVAL.item = DateAndTimeType{
				Name:     "datetime",
				FieldLen: fieldLen,
			}
		}
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:980
		{
			fieldLen := ""
			if yyDollar[2].stringItem != "" {
				fieldLen = yyDollar[2].stringItem
			}
			yyVAL.item = DateAndTimeType{
				Name:     "timestamp",
				FieldLen: fieldLen,
			}
		}
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:991
		{
			fieldLen := ""
			if yyDollar[2].stringItem != "" {
				fieldLen = yyDollar[2].stringItem
			}
			yyVAL.item = DateAndTimeType{
				Name:     "year",
				FieldLen: fieldLen,
			}
		}
	case 67:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:1004
		{
			fieldLen := ""
			if yyDollar[2].stringItem != "" {
				fieldLen = yyDollar[2].stringItem
			}
			yyVAL.item = StringType{
				Name:      "char",
				FieldLen:  fieldLen,
				Charset:   yyDollar[3].stringItem,
				Collation: yyDollar[4].stringItem,
			}
		}
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:1017
		{
			yyVAL.item = StringType{
				Name:      "varchar",
				FieldLen:  yyDollar[2].stringItem,
				Charset:   yyDollar[3].stringItem,
				Collation: yyDollar[4].stringItem,
			}
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1026
		{
			fieldLen := ""
			if yyDollar[2].stringItem != "" {
				fieldLen = yyDollar[2].stringItem
			}
			yyVAL.item = StringType{
				Name:     "binary",
				FieldLen: fieldLen,
			}
		}
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1037
		{
			yyVAL.item = StringType{
				Name:     "varbinary",
				FieldLen: yyDollar[2].stringItem,
			}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1044
		{
			yyVAL.item = StringType{
				Name: "tinyblob",
			}
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1050
		{
			yyVAL.item = StringType{
				Name:      "tinytext",
				Charset:   yyDollar[2].stringItem,
				Collation: yyDollar[3].stringItem,
			}
		}
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1058
		{
			fieldLen := ""
			if yyDollar[2].stringItem != "" {
				fieldLen = yyDollar[2].stringItem
			}
			yyVAL.item = StringType{
				Name:     "blob",
				FieldLen: fieldLen,
			}
		}
	case 74:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:1069
		{
			fieldLen := ""
			if yyDollar[2].stringItem != "" {
				fieldLen = yyDollar[2].stringItem
			}
			yyVAL.item = StringType{
				Name:      "text",
				FieldLen:  fieldLen,
				Charset:   yyDollar[3].stringItem,
				Collation: yyDollar[4].stringItem,
			}
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1082
		{
			yyVAL.item = StringType{
				Name: "mediumblob",
			}
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1088
		{
			yyVAL.item = StringType{
				Name:      "mediumtext",
				Charset:   yyDollar[2].stringItem,
				Collation: yyDollar[3].stringItem,
			}
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1096
		{
			yyVAL.item = StringType{
				Name: "longblob",
			}
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1102
		{
			yyVAL.item = StringType{
				Name:      "longtext",
				Charset:   yyDollar[2].stringItem,
				Collation: yyDollar[3].stringItem,
			}
		}
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:1110
		{
			yyVAL.item = StringListType{
				Name:      "enum",
				Values:    yyDollar[2].stringList,
				Charset:   yyDollar[3].stringItem,
				Collation: yyDollar[4].stringItem,
			}
		}
	case 80:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:1119
		{
			yyVAL.item = StringListType{
				Name:      "set",
				Values:    yyDollar[2].stringList,
				Charset:   yyDollar[3].stringItem,
				Collation: yyDollar[4].stringItem,
			}
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1130
		{
			yyVAL.item = JsonType{
				Name: "json",
			}
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1139
		{
			yyVAL.item = SpatialType{
				Name: "geometry",
			}
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1145
		{
			yyVAL.item = SpatialType{
				Name: "point",
			}
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1151
		{
			yyVAL.item = SpatialType{
				Name: "linestring",
			}
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1157
		{
			yyVAL.item = SpatialType{
				Name: "polygon",
			}
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1163
		{
			yyVAL.item = SpatialType{
				Name: "multipoint",
			}
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1169
		{
			yyVAL.item = SpatialType{
				Name: "multilinestring",
			}
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1175
		{
			yyVAL.item = SpatialType{
				Name: "multipolygon",
			}
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1181
		{
			yyVAL.item = SpatialType{
				Name: "geometrycollection",
			}
		}
	case 90:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:1188
		{
			yyVAL.item = ColumnOptions{}
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1192
		{
			yyVAL.item = yyDollar[1].item
		}
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1196
		{
			// TODO: error handling
			merged := yyDollar[1].item.(ColumnOptions)
			mergo.Merge(&merged, yyDollar[2].item.(ColumnOptions))
			yyVAL.item = merged
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1205
		{
			yyVAL.item = ColumnOptions{
				Nullability: yyDollar[1].stringItem,
			}
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1211
		{
			yyVAL.item = ColumnOptions{
				Default: yyDollar[1].stringItem,
			}
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1217
		{
			yyVAL.item = ColumnOptions{
				Visibility: yyDollar[1].stringItem,
			}
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1223
		{
			yyVAL.item = ColumnOptions{
				AutoIncrement: true,
			}
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1229
		{
			yyVAL.item = ColumnOptions{
				Unique: yyDollar[1].keyword,
			}
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1235
		{
			yyVAL.item = ColumnOptions{
				Primary: yyDollar[1].keyword,
			}
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1241
		{
			yyVAL.item = ColumnOptions{
				Comment: yyDollar[1].stringItem,
			}
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1247
		{
			yyVAL.item = ColumnOptions{
				ReferenceDefinition: yyDollar[1].item.(ReferenceDefinition),
			}
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1253
		{
			yyVAL.item = ColumnOptions{
				CheckConstraintDefinition: yyDollar[1].item.(CheckConstraintDefinition),
			}
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1259
		{
			yyVAL.item = ColumnOptions{
				OnUpdate: yyDollar[1].stringItem,
			}
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1265
		{
			yyVAL.item = ColumnOptions{
				GeneratedAs: yyDollar[1].stringItem,
			}
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1271
		{
			yyVAL.item = ColumnOptions{
				GeneratedColumnType: yyDollar[1].stringItem,
			}
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1277
		{
			yyVAL.item = ColumnOptions{
				Srid: yyDollar[1].stringItem,
			}
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1285
		{
			yyVAL.stringItem = "NULL"
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1289
		{
			yyVAL.stringItem = "NOT NULL"
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1295
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1301
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1305
		{
			yyVAL.stringItem = fmt.Sprintf("(%s)", yyDollar[2].stringItem)
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1309
		{
			yyVAL.stringItem = compactJoin([]string{yyDollar[1].stringItem, yyDollar[2].stringItem}, "")
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1315
		{
			yyVAL.stringItem = "VISIBLE"
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1319
		{
			yyVAL.stringItem = "INVISIBLE"
		}
	case 114:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:1324
		{
			yyVAL.stringItem = ""
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1328
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1334
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 117:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:1339
		{
			yyVAL.stringItem = ""
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1343
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1349
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 120:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:1355
		{
			yyVAL.stringItem = fmt.Sprintf("(%s)", yyDollar[3].stringItem)
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1361
		{
			yyVAL.stringItem = "VIRTUAL"
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1365
		{
			yyVAL.stringItem = "STORED"
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1371
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 124:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:1377
		{
			yyVAL.item = &IndexDefinition{
				IndexName:    yyDollar[2].stringItem,
				KeyPartList:  yyDollar[3].keyPartList,
				IndexOptions: yyDollar[4].item.(IndexOptions),
			}
		}
	case 125:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:1387
		{
			yyVAL.item = &FullTextIndexDefinition{
				IndexName:    yyDollar[2].stringItem,
				KeyPartList:  yyDollar[3].keyPartList,
				IndexOptions: yyDollar[4].item.(IndexOptions),
			}
		}
	case 126:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser/parser.go.y:1397
		{
			yyVAL.item = &PrimaryKeyDefinition{
				ConstraintName: yyDollar[1].stringItem,
				KeyPartList:    yyDollar[4].keyPartList,
				IndexOptions:   yyDollar[5].item.(IndexOptions),
			}
		}
	case 127:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser/parser.go.y:1407
		{
			yyVAL.item = &UniqueKeyDefinition{
				ConstraintName: yyDollar[1].stringItem,
				IndexName:      yyDollar[3].stringItem,
				KeyPartList:    yyDollar[4].keyPartList,
				IndexOptions:   yyDollar[5].item.(IndexOptions),
			}
		}
	case 128:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser/parser.go.y:1418
		{
			yyVAL.item = &ForeignKeyDefinition{
				ConstraintName:      yyDollar[1].stringItem,
				IndexName:           yyDollar[4].stringItem,
				KeyPartList:         yyDollar[5].keyPartList,
				ReferenceDefinition: yyDollar[6].item.(ReferenceDefinition),
			}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:1428
		{
			yyVAL.stringItem = ""
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1432
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1438
		{
			yyVAL.keyPartList = yyDollar[2].keyPartList
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1444
		{
			yyVAL.keyPartList = []KeyPart{yyDollar[1].item.(KeyPart)}
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1448
		{
			yyVAL.keyPartList = append(yyDollar[1].keyPartList, yyDollar[3].item.(KeyPart))
		}
	case 134:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:1453
		{
			yyVAL.stringItem = ""
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1457
		{
			yyVAL.stringItem = "ASC"
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1461
		{
			yyVAL.stringItem = "DESC"
		}
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1467
		{
			yyVAL.item = KeyPart{
				Column: yyDollar[1].stringItem,
				Length: yyDollar[2].stringItem,
				Order:  yyDollar[3].stringItem,
			}
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1475
		{
			yyVAL.item = KeyPart{
				Column: yyDollar[1].stringItem,
				Order:  yyDollar[2].stringItem,
			}
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:1483
		{
			yyVAL.item = IndexOptions{}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1487
		{
			yyVAL.item = yyDollar[1].item
		}
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1491
		{
			// TODO: error handling
			merged := yyDollar[1].item.(IndexOptions)
			mergo.Merge(&merged, yyDollar[2].item.(IndexOptions))
			yyVAL.item = merged
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1500
		{
			yyVAL.item = IndexOptions{
				KeyBlockSize: yyDollar[1].stringItem,
			}
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1506
		{
			yyVAL.item = IndexOptions{
				IndexType: yyDollar[1].stringItem,
			}
		}
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1512
		{
			yyVAL.item = IndexOptions{
				Parser: yyDollar[1].stringItem,
			}
		}
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1518
		{
			yyVAL.item = IndexOptions{
				Comment: yyDollar[1].stringItem,
			}
		}
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1524
		{
			yyVAL.item = IndexOptions{
				Visibility: yyDollar[1].stringItem,
			}
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1532
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1538
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1544
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1550
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:1556
		{
			yyVAL.item = ReferenceDefinition{
				TableName:        yyDollar[2].stringList[1],
				KeyPartList:      yyDollar[3].keyPartList,
				ReferenceOptions: yyDollar[4].item.(ReferenceOptions),
			}
		}
	case 152:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:1565
		{
			yyVAL.item = ReferenceOptions{}
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1569
		{
			yyVAL.item = yyDollar[1].item
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1573
		{
			// TODO: error handling
			merged := yyDollar[1].item.(ReferenceOptions)
			mergo.Merge(&merged, yyDollar[2].item.(ReferenceOptions))
			yyVAL.item = merged
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1582
		{
			yyVAL.item = ReferenceOptions{
				Match: yyDollar[1].stringItem,
			}
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1588
		{
			yyVAL.item = ReferenceOptions{
				OnDelete: yyDollar[1].stringItem,
			}
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1594
		{
			yyVAL.item = ReferenceOptions{
				OnUpdate: yyDollar[1].stringItem,
			}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1602
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1608
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1614
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1620
		{
			yyVAL.stringItem = "CASCADE"
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1624
		{
			yyVAL.stringItem = "SET NULL"
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1628
		{
			yyVAL.stringItem = "RESTRICT"
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1632
		{
			yyVAL.stringItem = "SET DEFAULT"
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1636
		{
			yyVAL.stringItem = "RESTRICT"
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1640
		{
			yyVAL.stringItem = "CURRENT_TIMESTAMP"
		}
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:1646
		{
			yyVAL.item = &CheckConstraintDefinition{
				ConstraintName:         yyDollar[1].stringItem,
				Check:                  yyDollar[3].token.Literal,
				CheckConstraintOptions: yyDollar[4].item.(CheckConstraintOptions),
			}
		}
	case 168:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:1655
		{
			yyVAL.stringItem = ""
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1659
		{
			yyVAL.stringItem = ""
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1663
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 171:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:1668
		{
			yyVAL.item = CheckConstraintOptions{}
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1672
		{
			yyVAL.item = yyDollar[1].item
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1676
		{
			// TODO: error handling
			merged := yyDollar[1].item.(CheckConstraintOptions)
			mergo.Merge(&merged, yyDollar[2].item.(CheckConstraintOptions))
			yyVAL.item = merged
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1685
		{
			yyVAL.item = CheckConstraintOptions{
				Enforcement: yyDollar[1].stringItem,
			}
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1693
		{
			yyVAL.stringItem = "ENFORCED"
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1697
		{
			yyVAL.stringItem = "NOT ENFORCED"
		}
	case 177:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:1702
		{
			yyVAL.item = TableOptions{}
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1706
		{
			yyVAL.item = yyDollar[1].item
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1710
		{
			// TODO: error handling
			merged := yyDollar[1].item.(TableOptions)
			mergo.Merge(&merged, yyDollar[2].item.(TableOptions))
			yyVAL.item = merged
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1719
		{
			yyVAL.item = TableOptions{
				AutoExtendedSize: yyDollar[1].stringItem,
			}
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1725
		{
			yyVAL.item = TableOptions{
				AutoIncrement: yyDollar[1].stringItem,
			}
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1731
		{
			yyVAL.item = TableOptions{
				AvgRowLength: yyDollar[1].stringItem,
			}
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1737
		{
			yyVAL.item = TableOptions{
				DefaultCharset: yyDollar[1].stringItem,
			}
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1743
		{
			yyVAL.item = TableOptions{
				DefaultCollate: yyDollar[1].stringItem,
			}
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1749
		{
			yyVAL.item = TableOptions{
				Checksum: yyDollar[1].stringItem,
			}
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1755
		{
			yyVAL.item = TableOptions{
				Comment: yyDollar[1].stringItem,
			}
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1761
		{
			yyVAL.item = TableOptions{
				Compression: yyDollar[1].stringItem,
			}
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1767
		{
			yyVAL.item = TableOptions{
				Connection: yyDollar[1].stringItem,
			}
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1773
		{
			yyVAL.item = TableOptions{
				DataDirectory: yyDollar[1].stringItem,
			}

		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1780
		{
			yyVAL.item = TableOptions{
				IndexDirectory: yyDollar[1].stringItem,
			}

		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1787
		{
			yyVAL.item = TableOptions{
				DelayKeyWrite: yyDollar[1].stringItem,
			}

		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1794
		{
			yyVAL.item = TableOptions{
				Encryption: yyDollar[1].stringItem,
			}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1800
		{
			yyVAL.item = TableOptions{
				Engine: yyDollar[1].stringItem,
			}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1806
		{
			yyVAL.item = TableOptions{
				EngineAttribute: yyDollar[1].stringItem,
			}
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1812
		{
			yyVAL.item = TableOptions{
				InsertMethod: yyDollar[1].stringItem,
			}
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1818
		{
			yyVAL.item = TableOptions{
				KeyBlockSize: yyDollar[1].stringItem,
			}
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1824
		{
			yyVAL.item = TableOptions{
				MaxRows: yyDollar[1].stringItem,
			}
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1830
		{
			yyVAL.item = TableOptions{
				MinRows: yyDollar[1].stringItem,
			}
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1836
		{
			yyVAL.item = TableOptions{
				PackKeys: yyDollar[1].stringItem,
			}
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1842
		{
			yyVAL.item = TableOptions{
				Password: yyDollar[1].stringItem,
			}
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1848
		{
			yyVAL.item = TableOptions{
				RowFormat: yyDollar[1].stringItem,
			}
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1854
		{
			yyVAL.item = TableOptions{
				SecondaryEngineAttribute: yyDollar[1].stringItem,
			}
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1860
		{
			yyVAL.item = TableOptions{
				StatsAutoRecalc: yyDollar[1].stringItem,
			}
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1866
		{
			yyVAL.item = TableOptions{
				StatsPersistent: yyDollar[1].stringItem,
			}
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1872
		{
			yyVAL.item = TableOptions{
				StatsSamplePages: yyDollar[1].stringItem,
			}
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1878
		{
			yyVAL.item = TableOptions{
				TableSpace:        yyDollar[1].stringList[0],
				TableSpaceStorage: yyDollar[1].stringList[1],
			}
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1885
		{
			yyVAL.item = TableOptions{
				Union: yyDollar[1].stringList,
			}
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1893
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1899
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1905
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1911
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1917
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1923
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1929
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:1935
		{
			yyVAL.stringItem = yyDollar[4].stringItem
		}
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:1941
		{
			yyVAL.stringItem = yyDollar[4].stringItem
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1947
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1953
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1959
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1965
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1971
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1977
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1983
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1989
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1995
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2001
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2007
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2013
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2019
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2025
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2031
		{
			yyVAL.stringList = []string{yyDollar[2].stringItem, yyDollar[3].stringItem}
		}
	case 232:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:2036
		{
			yyVAL.stringItem = ""
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2040
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2046
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2052
		{
			yyVAL.stringList = yyDollar[3].stringList
		}
	case 236:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:2057
		{
			yyVAL.item = PartitionConfig{}
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2061
		{
			yyVAL.item = yyDollar[1].item
		}
	case 238:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser/parser.go.y:2067
		{
			yyVAL.item = PartitionConfig{
				PartitionBy:          yyDollar[1].item.(PartitionBy),
				Partitions:           yyDollar[2].stringItem,
				SubpartitionBy:       yyDollar[3].item.(PartitionBy),
				Subpartitions:        yyDollar[4].stringItem,
				PartitionDefinitions: yyDollar[5].partitionDefinitionList,
			}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2079
		{
			yyVAL.item = yyDollar[3].item
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2083
		{
			yyVAL.item = yyDollar[3].item
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2087
		{
			yyVAL.item = yyDollar[3].item
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2091
		{
			yyVAL.item = yyDollar[3].item
		}
	case 243:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:2096
		{
			yyVAL.stringItem = ""
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2100
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2106
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 246:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:2111
		{
			yyVAL.item = PartitionBy{}
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2115
		{
			yyVAL.item = yyDollar[1].item
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2121
		{
			yyVAL.item = yyDollar[3].item
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2125
		{
			yyVAL.item = yyDollar[3].item
		}
	case 250:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:2130
		{
			yyVAL.stringItem = ""
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2134
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2140
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2146
		{
			yyVAL.item = PartitionBy{
				Type:       "HASH",
				Expression: yyDollar[3].stringItem,
			}
		}
	case 254:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:2155
		{
			yyVAL.item = PartitionBy{
				Type:    "KEY",
				Columns: yyDollar[4].stringList,
			}
		}
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2164
		{
			yyVAL.item = PartitionBy{
				Type:       "RANGE",
				Expression: yyDollar[2].stringItem,
			}
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2171
		{
			yyVAL.item = PartitionBy{
				Type:    "RANGE COLUMNS",
				Columns: yyDollar[3].stringList,
			}
		}
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2180
		{
			yyVAL.item = PartitionBy{
				Type:       "LIST",
				Expression: yyDollar[2].stringItem,
			}
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2187
		{
			yyVAL.item = PartitionBy{
				Type:    "LIST COLUMNS",
				Columns: yyDollar[3].stringList,
			}
		}
	case 259:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:2195
		{
			yyVAL.item = ""
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2199
		{
			yyVAL.item = yyDollar[1].item
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2205
		{
			yyVAL.item = yyDollar[3].stringItem
		}
	case 262:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:2210
		{
			yyVAL.partitionDefinitionList = []PartitionDefinition{}
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2214
		{
			yyVAL.partitionDefinitionList = yyDollar[1].partitionDefinitionList
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2220
		{
			yyVAL.partitionDefinitionList = yyDollar[2].partitionDefinitionList
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2226
		{
			yyVAL.partitionDefinitionList = []PartitionDefinition{yyDollar[1].item.(PartitionDefinition)}
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2230
		{
			yyVAL.partitionDefinitionList = append(yyDollar[1].partitionDefinitionList, yyDollar[3].item.(PartitionDefinition))
		}
	case 267:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser/parser.go.y:2236
		{
			yyVAL.item = PartitionDefinition{
				Name:             yyDollar[2].stringItem,
				Operator:         yyDollar[3].stringList[0],
				ValueExpression:  yyDollar[3].stringList[1],
				PartitionOptions: yyDollar[4].item.(PartitionOptions),
				Subpartitions:    yyDollar[5].subpartitionDefinitionList,
			}
		}
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:2248
		{
			yyVAL.stringList = []string{"LESS THAN", yyDollar[4].stringItem}
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2252
		{
			yyVAL.stringList = []string{"IN", yyDollar[3].stringItem}
		}
	case 270:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:2257
		{
			yyVAL.item = PartitionOptions{}
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2261
		{
			yyVAL.item = yyDollar[1].item
		}
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2265
		{
			// TODO: error handling
			merged := yyDollar[1].item.(PartitionOptions)
			mergo.Merge(&merged, yyDollar[2].item.(PartitionOptions))
			yyVAL.item = merged
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2274
		{
			yyVAL.item = PartitionOptions{
				Engine: yyDollar[1].stringItem,
			}
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2280
		{
			yyVAL.item = PartitionOptions{
				Comment: yyDollar[1].stringItem,
			}
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2286
		{
			yyVAL.item = PartitionOptions{
				DataDirectory: yyDollar[1].stringItem,
			}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2292
		{
			yyVAL.item = PartitionOptions{
				IndexDirectory: yyDollar[1].stringItem,
			}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2298
		{
			yyVAL.item = PartitionOptions{
				MaxRows: yyDollar[1].stringItem,
			}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2304
		{
			yyVAL.item = PartitionOptions{
				MinRows: yyDollar[1].stringItem,
			}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2310
		{
			yyVAL.item = PartitionOptions{
				TableSpace: yyDollar[1].stringItem,
			}
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2318
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2324
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 282:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:2329
		{
			yyVAL.subpartitionDefinitionList = []SubpartitionDefinition{}
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2333
		{
			yyVAL.subpartitionDefinitionList = yyDollar[1].subpartitionDefinitionList
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2339
		{
			yyVAL.subpartitionDefinitionList = yyDollar[2].subpartitionDefinitionList
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2345
		{
			yyVAL.subpartitionDefinitionList = []SubpartitionDefinition{yyDollar[1].item.(SubpartitionDefinition)}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2349
		{
			yyVAL.subpartitionDefinitionList = append(yyDollar[1].subpartitionDefinitionList, yyDollar[3].item.(SubpartitionDefinition))
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2355
		{
			yyVAL.item = SubpartitionDefinition{
				Name:             yyDollar[2].stringItem,
				PartitionOptions: yyDollar[3].item.(PartitionOptions),
			}
		}
	case 288:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:2364
		{
			yyVAL.keyword = false
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2368
		{
			yyVAL.keyword = true
		}
	case 290:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:2373
		{
			yyVAL.stringItem = ""
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2377
		{
			yyVAL.stringItem = "NOT"
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2383
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2387
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2391
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2395
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2399
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2403
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2407
		{
			yyVAL.stringItem = "NULL"
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2413
		{
			yyVAL.stringItem = "TRUE"
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2417
		{
			yyVAL.stringItem = "FALSE"
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2423
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2427
		{
			yyVAL.stringItem = "0x" + yyDollar[1].token.Literal[2:len(yyDollar[1].token.Literal)-1]
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2433
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2437
		{
			yyVAL.stringItem = "0b" + yyDollar[1].token.Literal[1:len(yyDollar[1].token.Literal)-1]
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2443
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2449
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2456
		{
			yyVAL.stringItem = yyDollar[2].token.Literal
		}
	case 308:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:2461
		{
			yyVAL.stringItem = ""
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2465
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2471
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2477
		{
			yyVAL.stringList = []string{yyDollar[1].stringItem}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2481
		{
			yyVAL.stringList = append(yyDollar[1].stringList, yyDollar[3].stringItem)
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2487
		{
			yyVAL.stringList = yyDollar[2].stringList
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2493
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2497
		{
			yyVAL.stringItem = yyDollar[1].token.Submatches[0]
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2503
		{
			yyVAL.stringList = []string{yyDollar[1].stringItem}
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2507
		{
			yyVAL.stringList = append(yyDollar[1].stringList, yyDollar[3].stringItem)
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2513
		{
			yyVAL.stringList = yyDollar[2].stringList
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2519
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2523
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2529
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2533
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2537
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2541
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2545
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2549
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2553
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 328:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:2559
		{
			yyVAL.stringList = []string{}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2563
		{
			yyVAL.stringList = yyDollar[1].stringList
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2569
		{
			yyVAL.stringList = yyDollar[2].stringList
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2575
		{
			yyVAL.stringList = []string{yyDollar[1].stringItem}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2579
		{
			yyVAL.stringList = append(yyDollar[1].stringList, yyDollar[3].stringItem)
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2585
		{
			yyVAL.stringItem = fmt.Sprintf("%s AND %s", yyDollar[1].stringItem, yyDollar[3].stringItem)
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2589
		{
			yyVAL.stringItem = fmt.Sprintf("%s OR %s", yyDollar[1].stringItem, yyDollar[3].stringItem)
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2593
		{
			yyVAL.stringItem = fmt.Sprintf("%s XOR %s", yyDollar[1].stringItem, yyDollar[3].stringItem)
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2597
		{
			yyVAL.stringItem = fmt.Sprintf("NOT %s", yyDollar[2].stringItem)
		}
	case 337:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:2601
		{
			yyVAL.stringItem = compactJoin([]string{yyDollar[1].stringItem, "IS", yyDollar[3].stringItem, yyDollar[4].stringItem}, " ")
		}
	case 338:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:2605
		{
			yyVAL.stringItem = compactJoin([]string{yyDollar[1].stringItem, "IS", yyDollar[3].stringItem, "UNKNOWN"}, " ")
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2609
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2615
		{
			yyVAL.keyword = true
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2617
		{
			yyVAL.keyword = true
		}
	case 342:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:2621
		{
			yyVAL.stringItem = compactJoin([]string{yyDollar[1].stringItem, yyDollar[2].token.Literal, yyDollar[3].stringItem, yyDollar[4].token.Literal}, " ")
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2625
		{
			yyVAL.stringItem = compactJoin([]string{yyDollar[1].stringItem, yyDollar[2].stringItem, yyDollar[3].stringItem}, " ")
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2629
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:2639
		{
			expressions := fmt.Sprintf("(%s)", strings.Join(yyDollar[4].stringList, ", "))
			yyVAL.stringItem = compactJoin([]string{yyDollar[1].stringItem, yyDollar[2].stringItem, "IN", expressions}, " ")
		}
	case 346:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser/parser.go.y:2644
		{
			yyVAL.stringItem = compactJoin([]string{yyDollar[1].stringItem, yyDollar[2].stringItem, "BETWEEN", yyDollar[4].stringItem, "AND", yyDollar[6].stringItem}, " ")
		}
	case 347:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:2648
		{
			yyVAL.stringItem = compactJoin([]string{yyDollar[1].stringItem, "SOUNDS", "LIKE", yyDollar[4].stringItem}, " ")
		}
	case 348:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:2652
		{
			yyVAL.stringItem = compactJoin([]string{yyDollar[1].stringItem, yyDollar[2].stringItem, "LIKE", yyDollar[4].stringItem}, " ")
		}
	case 349:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:2656
		{
			yyVAL.stringItem = compactJoin([]string{yyDollar[1].stringItem, yyDollar[2].stringItem, "REGEXP", yyDollar[4].stringItem}, " ")
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2660
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2666
		{
			yyVAL.stringItem = fmt.Sprintf("%s | %s", yyDollar[1].stringItem, yyDollar[3].stringItem)
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2670
		{
			yyVAL.stringItem = fmt.Sprintf("%s & %s", yyDollar[1].stringItem, yyDollar[3].stringItem)
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2674
		{
			yyVAL.stringItem = fmt.Sprintf("%s << %s", yyDollar[1].stringItem, yyDollar[3].stringItem)
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2678
		{
			yyVAL.stringItem = fmt.Sprintf("%s >> %s", yyDollar[1].stringItem, yyDollar[3].stringItem)
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2682
		{
			yyVAL.stringItem = fmt.Sprintf("%s + %s", yyDollar[1].stringItem, yyDollar[3].stringItem)
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2686
		{
			yyVAL.stringItem = fmt.Sprintf("%s - %s", yyDollar[1].stringItem, yyDollar[3].stringItem)
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2690
		{
			yyVAL.stringItem = fmt.Sprintf("%s * %s", yyDollar[1].stringItem, yyDollar[3].stringItem)
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2694
		{
			yyVAL.stringItem = fmt.Sprintf("%s / %s", yyDollar[1].stringItem, yyDollar[3].stringItem)
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2698
		{
			yyVAL.stringItem = fmt.Sprintf("%s %% %s", yyDollar[1].stringItem, yyDollar[3].stringItem)
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2702
		{
			yyVAL.stringItem = fmt.Sprintf("%s ^ %s", yyDollar[1].stringItem, yyDollar[3].stringItem)
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2706
		{
			yyVAL.stringItem = fmt.Sprintf("%s + %s", yyDollar[1].stringItem, yyDollar[3].stringItem)
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2710
		{
			yyVAL.stringItem = fmt.Sprintf("%s - %s", yyDollar[1].stringItem, yyDollar[3].stringItem)
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2714
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2721
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2725
		{
			yyVAL.stringItem = fmt.Sprintf("`%s`", yyDollar[1].stringItem)
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2733
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2737
		{
			yyVAL.stringItem = fmt.Sprintf("%s COLLATE %s", yyDollar[1].stringItem, yyDollar[3].stringItem)
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2741
		{
			yyVAL.stringItem = "?"
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2745
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2749
		{
			yyVAL.stringItem = fmt.Sprintf("+ %s", yyDollar[2].stringItem)
		}
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2753
		{
			yyVAL.stringItem = fmt.Sprintf("- %s", yyDollar[2].stringItem)
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2757
		{
			yyVAL.stringItem = fmt.Sprintf("~ %s", yyDollar[2].stringItem)
		}
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2761
		{
			yyVAL.stringItem = fmt.Sprintf("! %s", yyDollar[2].stringItem)
		}
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2765
		{
			yyVAL.stringItem = fmt.Sprintf("BINARY %s", yyDollar[2].stringItem)
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2769
		{
			yyVAL.stringItem = fmt.Sprintf("(%s)", strings.Join(yyDollar[1].stringList, ", "))
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2773
		{
			expressions := fmt.Sprintf("(%s)", strings.Join(yyDollar[2].stringList, ", "))
			yyVAL.stringItem = fmt.Sprintf("ROW %s", expressions)
		}
	case 377:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:2786
		{
			ident := fmt.Sprintf("`%s`", yyDollar[2].stringItem)
			yyVAL.stringItem = fmt.Sprintf("{%s %s}", ident, yyDollar[3].stringItem)
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2791
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2795
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2799
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 381:
		yyDollar = yyS[yypt-7 : yypt+1]
//line parser/parser.go.y:2805
		{
			idents := fmt.Sprintf("(%s)", JoinS(yyDollar[2].stringList, ", ", "`"))
			against := fmt.Sprintf("(%s)", compactJoin([]string{yyDollar[5].stringItem, yyDollar[6].stringItem}, " "))
			yyVAL.stringItem = compactJoin([]string{"MATCH", idents, "AGAINST", against}, " ")
		}
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:2812
		{
			yyVAL.stringItem = ""
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2816
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:2822
		{
			yyVAL.stringItem = "IN NATURAL LANGUAGE MODE"
		}
	case 385:
		yyDollar = yyS[yypt-7 : yypt+1]
//line parser/parser.go.y:2826
		{
			yyVAL.stringItem = "IN NATURAL LANGUAGE MODE WITH QUERY EXPANSION"
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2830
		{
			yyVAL.stringItem = "IN BOOLEAN MODE"
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2834
		{
			yyVAL.stringItem = "WITH QUERY EXPANSION"
		}
	case 388:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser/parser.go.y:2840
		{
			yyVAL.stringItem = compactJoin([]string{"CASE", yyDollar[2].stringItem, yyDollar[3].stringItem, yyDollar[4].stringItem, "END"}, " ")
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2846
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2850
		{
			yyVAL.stringItem = fmt.Sprintf("%s %s", yyDollar[1].stringItem, yyDollar[2].stringItem)
		}
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:2855
		{
			yyVAL.stringItem = ""
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2859
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2865
		{
			yyVAL.stringItem = fmt.Sprintf("ELSE %s", yyDollar[2].stringItem)
		}
	case 394:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:2871
		{
			yyVAL.stringItem = fmt.Sprintf("WHEN %s THEN %s", yyDollar[2].stringItem, yyDollar[4].stringItem)
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2877
		{
			yyVAL.stringItem = compactJoin([]string{"INTERVAL", yyDollar[2].stringItem, yyDollar[3].stringItem}, " ")
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2882
		{
			yyVAL.stringItem = "MICROSECOND"
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2883
		{
			yyVAL.stringItem = "SECOND"
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2884
		{
			yyVAL.stringItem = "MINUTE"
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2885
		{
			yyVAL.stringItem = "HOUR"
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2886
		{
			yyVAL.stringItem = "DAY"
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2887
		{
			yyVAL.stringItem = "WEEK"
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2888
		{
			yyVAL.stringItem = "MONTH"
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2889
		{
			yyVAL.stringItem = "QUARTER"
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2890
		{
			yyVAL.stringItem = "YEAR"
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2891
		{
			yyVAL.stringItem = "SECOND_MICROSECOND"
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2892
		{
			yyVAL.stringItem = "MINUTE_MICROSECOND"
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2893
		{
			yyVAL.stringItem = "MINUTE_SECOND"
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2894
		{
			yyVAL.stringItem = "HOUR_MICROSECOND"
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2895
		{
			yyVAL.stringItem = "HOUR_SECOND"
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2896
		{
			yyVAL.stringItem = "HOUR_MINUTE"
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2897
		{
			yyVAL.stringItem = "DAY_MICROSECOND"
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2898
		{
			yyVAL.stringItem = "DAY_SECOND"
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2899
		{
			yyVAL.stringItem = "DAY_MINUTE"
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2900
		{
			yyVAL.stringItem = "DAY_HOUR"
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2901
		{
			yyVAL.stringItem = "YEAR_MONTH"
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2906
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2910
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:2916
		{
			yyVAL.stringItem = fmt.Sprintf("%s(%s)", yyDollar[1].stringItem, strings.Join(yyDollar[3].stringList, ","))
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2920
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2924
		{
			yyVAL.stringItem = compactJoin([]string{yyDollar[1].stringItem, yyDollar[2].stringItem}, "")
		}
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:2929
		{
			yyVAL.stringItem = ""
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2930
		{
			yyVAL.stringItem = "()"
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2933
		{
			yyVAL.stringItem = "CHAESET"
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2934
		{
			yyVAL.stringItem = "DATE"
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2935
		{
			yyVAL.stringItem = "DATABASE"
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2936
		{
			yyVAL.stringItem = "DEFAULT"
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2937
		{
			yyVAL.stringItem = "YEAR"
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2938
		{
			yyVAL.stringItem = "MONTH"
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2939
		{
			yyVAL.stringItem = "WEEK"
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2940
		{
			yyVAL.stringItem = "DAY"
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2941
		{
			yyVAL.stringItem = "HOUR"
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2942
		{
			yyVAL.stringItem = "MINUTE"
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2943
		{
			yyVAL.stringItem = "SECOND"
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2944
		{
			yyVAL.stringItem = "MICROSECOND"
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2945
		{
			yyVAL.stringItem = "IF"
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2946
		{
			yyVAL.stringItem = "INTERVAL"
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2947
		{
			yyVAL.stringItem = "TIME"
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2948
		{
			yyVAL.stringItem = "TIMESTAMP"
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2951
		{
			yyVAL.stringItem = "CURRENT_UESR"
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2952
		{
			yyVAL.stringItem = "CURRENT_DATE"
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2953
		{
			yyVAL.stringItem = "CURRENT_ROLE"
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2954
		{
			yyVAL.stringItem = "UTC_DATE"
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2957
		{
			yyVAL.stringItem = "CURRENT_TIME"
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2958
		{
			yyVAL.stringItem = "CURRENT_TIMESTAMP"
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2959
		{
			yyVAL.stringItem = "LOCALTIME"
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2960
		{
			yyVAL.stringItem = "LOCALTIMESTAMP"
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2961
		{
			yyVAL.stringItem = "UTC_TIME"
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2962
		{
			yyVAL.stringItem = "UTC_TIMESTAMP"
		}
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:2967
		{
			yyVAL.stringItem = fmt.Sprintf("%s(%s)", yyDollar[1].stringItem, strings.Join(yyDollar[3].stringList, ","))
		}
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:2973
		{
			yyVAL.keyword = false
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2975
		{
			yyVAL.keyword = true
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2979
		{
			yyVAL.keyword = true
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2981
		{
			yyVAL.keyword = true
		}
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:2984
		{
			yyVAL.keyword = false
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2986
		{
			yyVAL.keyword = true
		}
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:2989
		{
			yyVAL.keyword = true
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2991
		{
			yyVAL.keyword = false
		}
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2995
		{
			yyVAL.keyword = true
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2997
		{
			yyVAL.keyword = true
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:3001
		{
			yyVAL.keyword = true
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:3003
		{
			yyVAL.keyword = true
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:3007
		{
			yyVAL.keyword = true
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:3009
		{
			yyVAL.keyword = true
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:3013
		{
			yyVAL.keyword = true
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:3015
		{
			yyVAL.keyword = true
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:3017
		{
			yyVAL.keyword = true
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:3021
		{
			yyVAL.keyword = true
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:3023
		{
			yyVAL.keyword = true
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:3027
		{
			yyVAL.keyword = true
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:3029
		{
			yyVAL.keyword = true
		}
	case 471:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:3033
		{
			yyVAL.keyword = false
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:3035
		{
			yyVAL.keyword = true
		}
	case 473:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:3038
		{
			yyVAL.keyword = false
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:3040
		{
			yyVAL.keyword = true
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:3044
		{
			yyVAL.keyword = true
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:3046
		{
			yyVAL.keyword = true
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:3050
		{
			yyVAL.keyword = true
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:3052
		{
			yyVAL.keyword = true
		}
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:3056
		{
			yyVAL.keyword = true
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:3058
		{
			yyVAL.keyword = true
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:3062
		{
			yyVAL.keyword = true
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:3064
		{
			yyVAL.keyword = true
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:3068
		{
			yyVAL.keyword = true
		}
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:3070
		{
			yyVAL.keyword = true
		}
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:3074
		{
			yyVAL.keyword = true
		}
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:3076
		{
			yyVAL.keyword = true
		}
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:3079
		{
			yyVAL.keyword = false
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:3081
		{
			yyVAL.keyword = true
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:3085
		{
			yyVAL.keyword = true
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:3087
		{
			yyVAL.keyword = true
		}
	}
	goto yystack /* stack new state and value */
}
