// Code generated by goyacc -o parser/parser.go parser/parser.go.y. DO NOT EDIT.

//line parser/parser.go.y:2
package parser

import __yyfmt__ "fmt"

//line parser/parser.go.y:2

import (
	"github.com/imdario/mergo"
	"github.com/kota65535/sql-parser/lexer"
)

//line parser/parser.go.y:10
type yySymType struct {
	yys                        int
	empty                      struct{}
	statements                 []Statement
	statement                  Statement
	partitionDefinitionList    []PartitionDefinition
	subpartitionDefinitionList []SubpartitionDefinition
	keyPartList                []KeyPart
	list                       []interface{}
	item                       interface{}
	stringList                 []string
	stringItem                 string
	keyword                    bool
	token                      *lexer.Token
}

const LP = 57346
const RP = 57347
const COMMA = 57348
const SEMICOLON = 57349
const EQ = 57350
const DOT = 57351
const CREATE = 57352
const USE = 57353
const TEMPORARY = 57354
const DATABASE = 57355
const SCHEMA = 57356
const TABLE = 57357
const IF_NOT_EXISTS = 57358
const DEFAULT = 57359
const CHARSET = 57360
const CHARACTER = 57361
const SET = 57362
const COLLATE = 57363
const ENCRYPTION = 57364
const BIT = 57365
const TINYINT = 57366
const BOOL = 57367
const BOOLEAN = 57368
const SMALLINT = 57369
const MEDIUMINT = 57370
const INT = 57371
const INTEGER = 57372
const BIGINT = 57373
const UNSIGNED = 57374
const ZEROFILL = 57375
const DECIMAL = 57376
const DEC = 57377
const FIXED = 57378
const FLOAT = 57379
const DOUBLE = 57380
const REAL = 57381
const CHAR = 57382
const VARCHAR = 57383
const BINARY = 57384
const VARBINARY = 57385
const TINYBLOB = 57386
const TINYTEXT = 57387
const BLOB = 57388
const TEXT = 57389
const MEDIUMBLOB = 57390
const MEDIUMTEXT = 57391
const LONGBLOB = 57392
const LONGTEXT = 57393
const ENUM = 57394
const DATE = 57395
const TIME = 57396
const DATETIME = 57397
const TIMESTAMP = 57398
const YEAR = 57399
const JSON = 57400
const GEOMETRY = 57401
const POINT = 57402
const LINESTRING = 57403
const POLYGON = 57404
const MULTIPOINT = 57405
const MULTILINESTRING = 57406
const MULTIPOLYGON = 57407
const GEOMETRYCOLLECTION = 57408
const NULL = 57409
const NOT_NULL = 57410
const VISIBLE = 57411
const INVISIBLE = 57412
const AUTO_INCREMENT = 57413
const UNIQUE = 57414
const PRIMARY = 57415
const KEY = 57416
const CURRENT_TIMESTAMP = 57417
const GENERATED = 57418
const ALWAYS = 57419
const AS = 57420
const VIRTUAL = 57421
const STORED = 57422
const SRID = 57423
const INDEX = 57424
const ASC = 57425
const DESC = 57426
const USING = 57427
const FULLTEXT = 57428
const KEY_BLOCK_SIZE = 57429
const WITH = 57430
const PARSER = 57431
const CONSTRAINT = 57432
const FOREIGN = 57433
const REFERENCES = 57434
const MATCH = 57435
const ON_DELETE = 57436
const ON_UPDATE = 57437
const CASCADE = 57438
const RESTRICT = 57439
const NO_ACTION = 57440
const CHECK = 57441
const ENFORCED = 57442
const NOT_ENFORCED = 57443
const AUTOEXTENDED_SIZE = 57444
const AVG_ROW_LENGTH = 57445
const CHECKSUM = 57446
const COMMENT = 57447
const COMPRESSION = 57448
const CONNECTION = 57449
const DELAY_KEY_WRITE = 57450
const DATA = 57451
const DIRECTORY = 57452
const ENGINE = 57453
const ENGINE_ATTRIBUTE = 57454
const INSERT_METHOD = 57455
const MAX_ROWS = 57456
const MIN_ROWS = 57457
const PACK_KEYS = 57458
const PASSWORD = 57459
const ROW_FORMAT = 57460
const SECONDARY_ENGINE_ATTRIBUTE = 57461
const STATS_AUTO_RECALC = 57462
const STATS_PERSISTENT = 57463
const STATS_SAMPLE_PAGES = 57464
const TABLESPACE = 57465
const STORAGE = 57466
const UNION = 57467
const INT_NUM = 57468
const FLOAT_NUM = 57469
const BIT_NUM = 57470
const BIT_STR = 57471
const HEX_NUM = 57472
const HEX_STR = 57473
const STRING = 57474
const IDENTIFIER = 57475
const QUOTED_IDENTIFIER = 57476
const TRUE = 57477
const FALSE = 57478
const EXPRESSION = 57479
const PARTITION = 57480
const BY = 57481
const PARTITIONS = 57482
const Subpartition = 57483
const LINEAR = 57484
const HASH = 57485
const COLUMNS = 57486
const ALGORITHM = 57487
const RANGE = 57488
const LIST = 57489
const SUBPARTITIONS = 57490
const SUBPARTITION = 57491
const VALUES = 57492
const LESS = 57493
const THAN = 57494
const MAXVALUE = 57495
const IN = 57496
const NOT = 57497

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LP",
	"RP",
	"COMMA",
	"SEMICOLON",
	"EQ",
	"DOT",
	"CREATE",
	"USE",
	"TEMPORARY",
	"DATABASE",
	"SCHEMA",
	"TABLE",
	"IF_NOT_EXISTS",
	"DEFAULT",
	"CHARSET",
	"CHARACTER",
	"SET",
	"COLLATE",
	"ENCRYPTION",
	"BIT",
	"TINYINT",
	"BOOL",
	"BOOLEAN",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"UNSIGNED",
	"ZEROFILL",
	"DECIMAL",
	"DEC",
	"FIXED",
	"FLOAT",
	"DOUBLE",
	"REAL",
	"CHAR",
	"VARCHAR",
	"BINARY",
	"VARBINARY",
	"TINYBLOB",
	"TINYTEXT",
	"BLOB",
	"TEXT",
	"MEDIUMBLOB",
	"MEDIUMTEXT",
	"LONGBLOB",
	"LONGTEXT",
	"ENUM",
	"DATE",
	"TIME",
	"DATETIME",
	"TIMESTAMP",
	"YEAR",
	"JSON",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"GEOMETRYCOLLECTION",
	"NULL",
	"NOT_NULL",
	"VISIBLE",
	"INVISIBLE",
	"AUTO_INCREMENT",
	"UNIQUE",
	"PRIMARY",
	"KEY",
	"CURRENT_TIMESTAMP",
	"GENERATED",
	"ALWAYS",
	"AS",
	"VIRTUAL",
	"STORED",
	"SRID",
	"INDEX",
	"ASC",
	"DESC",
	"USING",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"WITH",
	"PARSER",
	"CONSTRAINT",
	"FOREIGN",
	"REFERENCES",
	"MATCH",
	"ON_DELETE",
	"ON_UPDATE",
	"CASCADE",
	"RESTRICT",
	"NO_ACTION",
	"CHECK",
	"ENFORCED",
	"NOT_ENFORCED",
	"AUTOEXTENDED_SIZE",
	"AVG_ROW_LENGTH",
	"CHECKSUM",
	"COMMENT",
	"COMPRESSION",
	"CONNECTION",
	"DELAY_KEY_WRITE",
	"DATA",
	"DIRECTORY",
	"ENGINE",
	"ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"ROW_FORMAT",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"TABLESPACE",
	"STORAGE",
	"UNION",
	"INT_NUM",
	"FLOAT_NUM",
	"BIT_NUM",
	"BIT_STR",
	"HEX_NUM",
	"HEX_STR",
	"STRING",
	"IDENTIFIER",
	"QUOTED_IDENTIFIER",
	"TRUE",
	"FALSE",
	"EXPRESSION",
	"PARTITION",
	"BY",
	"PARTITIONS",
	"Subpartition",
	"LINEAR",
	"HASH",
	"COLUMNS",
	"ALGORITHM",
	"RANGE",
	"LIST",
	"SUBPARTITIONS",
	"SUBPARTITION",
	"VALUES",
	"LESS",
	"THAN",
	"MAXVALUE",
	"IN",
	"NOT",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line parser/parser.go.y:2917

//line yacctab:1
var yyExca = [...]int16{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 29,
	1, 9,
	7, 9,
	-2, 327,
	-1, 55,
	1, 241,
	7, 241,
	-2, 327,
	-1, 345,
	99, 173,
	-2, 33,
	-1, 362,
	132, 304,
	-2, 315,
}

const yyPrivate = 57344

const yyLast = 759

var yyAct = [...]int16{
	284, 611, 610, 593, 368, 508, 636, 461, 18, 356,
	581, 495, 567, 494, 506, 342, 514, 423, 354, 313,
	379, 547, 50, 18, 412, 302, 301, 37, 346, 38,
	408, 380, 396, 283, 634, 86, 609, 35, 149, 499,
	157, 625, 500, 145, 626, 138, 389, 638, 429, 146,
	154, 155, 90, 156, 482, 522, 530, 311, 436, 311,
	90, 309, 310, 434, 52, 53, 300, 525, 312, 595,
	418, 160, 432, 19, 20, 296, 449, 314, 341, 633,
	194, 193, 516, 517, 289, 369, 563, 151, 585, 586,
	371, 568, 569, 463, 420, 150, 294, 538, 469, 152,
	458, 457, 421, 153, 293, 422, 419, 537, 167, 168,
	169, 191, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 120, 192, 314, 454, 452, 453, 455,
	456, 431, 160, 620, 450, 451, 19, 20, 466, 291,
	290, 56, 549, 484, 295, 30, 116, 536, 391, 96,
	119, 17, 622, 34, 425, 126, 127, 54, 292, 462,
	464, 465, 22, 36, 135, 621, 289, 44, 43, 325,
	45, 327, 285, 24, 27, 39, 26, 333, 315, 316,
	317, 110, 51, 40, 42, 617, 323, 146, 28, 110,
	36, 328, 329, 330, 331, 46, 2, 162, 335, 336,
	337, 88, 318, 319, 320, 321, 322, 21, 324, 88,
	326, 44, 43, 616, 615, 614, 332, 613, 334, 382,
	383, 384, 385, 350, 387, 362, 370, 353, 392, 393,
	349, 355, 344, 75, 386, 630, 388, 40, 49, 44,
	43, 75, 45, 46, 113, 399, 400, 398, 401, 402,
	403, 404, 16, 13, 14, 120, 10, 394, 558, 395,
	125, 74, 67, 66, 411, 63, 496, 8, 9, 74,
	67, 66, 32, 63, 601, 112, 114, 115, 116, 117,
	118, 121, 119, 600, 122, 123, 124, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 539, 136, 343,
	414, 415, 433, 435, 575, 363, 364, 640, 641, 430,
	381, 416, 417, 120, 73, 602, 603, 564, 565, 413,
	61, 503, 73, 125, 504, 555, 556, 410, 61, 545,
	544, 437, 31, 407, 439, 397, 116, 534, 533, 48,
	119, 116, 622, 195, 196, 126, 127, 528, 637, 608,
	607, 619, 594, 521, 135, 621, 428, 299, 448, 307,
	38, 306, 529, 308, 440, 305, 165, 111, 467, 340,
	109, 350, 445, 362, 370, 353, 108, 107, 349, 355,
	60, 106, 474, 105, 104, 468, 103, 460, 60, 102,
	101, 470, 99, 442, 94, 98, 97, 473, 93, 459,
	95, 92, 476, 477, 507, 91, 89, 87, 85, 288,
	502, 501, 100, 286, 287, 148, 518, 490, 509, 510,
	492, 147, 471, 472, 375, 372, 352, 526, 480, 351,
	475, 511, 512, 478, 548, 481, 483, 233, 232, 231,
	531, 230, 532, 229, 524, 523, 485, 486, 487, 488,
	489, 228, 227, 491, 226, 225, 493, 224, 223, 222,
	221, 220, 219, 218, 217, 216, 215, 214, 213, 212,
	211, 243, 242, 241, 240, 535, 239, 238, 237, 540,
	541, 236, 235, 542, 234, 41, 543, 23, 25, 546,
	11, 15, 561, 562, 12, 7, 560, 550, 551, 552,
	553, 554, 6, 557, 618, 559, 612, 520, 519, 298,
	297, 560, 560, 339, 338, 570, 82, 81, 566, 80,
	572, 571, 79, 78, 579, 77, 76, 72, 71, 70,
	69, 576, 68, 577, 65, 584, 64, 62, 59, 58,
	57, 515, 578, 583, 582, 498, 497, 359, 358, 357,
	424, 390, 441, 348, 347, 36, 507, 33, 159, 158,
	46, 447, 446, 444, 443, 606, 588, 84, 589, 591,
	590, 83, 560, 406, 405, 587, 598, 409, 438, 479,
	584, 597, 527, 304, 599, 604, 303, 427, 596, 426,
	164, 163, 161, 144, 143, 142, 141, 605, 140, 513,
	580, 90, 628, 623, 624, 90, 202, 201, 200, 113,
	631, 199, 205, 204, 203, 198, 36, 197, 55, 345,
	120, 139, 29, 639, 137, 125, 47, 505, 642, 635,
	629, 627, 592, 632, 574, 644, 628, 90, 643, 90,
	112, 114, 115, 116, 117, 118, 121, 119, 573, 122,
	123, 124, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 5, 136, 4, 3, 360, 361, 363, 364,
	113, 365, 367, 366, 1, 376, 166, 377, 373, 374,
	378, 0, 0, 0, 0, 0, 0, 0, 0, 153,
	0, 369, 0, 0, 371, 0, 0, 0, 0, 0,
	0, 245, 258, 0, 116, 268, 269, 270, 271, 272,
	273, 274, 275, 276, 0, 0, 277, 278, 279, 280,
	281, 282, 244, 246, 247, 248, 249, 250, 251, 252,
	253, 254, 255, 256, 257, 206, 207, 208, 209, 210,
	259, 260, 261, 262, 263, 264, 265, 266, 267,
}

var yyPact = [...]int16{
	267, 259, -1000, -1000, -1000, -1000, 250, -60, -1000, -1000,
	267, 167, 171, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -60, -1000, -1000, 167, -1000, 156, -60, 156,
	-1000, -1000, -1000, -1000, 231, -1000, -1000, 345, 239, -1000,
	184, 184, 184, 147, -1000, -1000, -1000, 183, 13, -60,
	-60, -1000, -60, -62, -1000, 548, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 184, 184, 184, 159, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	-60, 184, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -29,
	-30, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 348, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 692, -60, -60, 77,
	-1000, -1000, 22, -60, -1000, -1000, -1000, -1000, -57, -1000,
	-1000, -1000, -1000, -1000, -74, -85, -71, -49, -49, -49,
	-49, -62, -62, -62, -62, -62, -49, -62, -60, -62,
	-60, -49, -49, -49, -49, -62, -60, -62, -49, -49,
	-49, -46, 305, -1000, -1000, -1000, 13, 609, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 316, 316, 316,
	316, 316, 316, 316, 316, -1000, 203, 316, 316, -1000,
	203, -1000, 203, 341, 341, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 316, 316, -1000, 316, 316, 316,
	316, 339, 333, 333, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 325, -1000, 325, 325, -60, -60, -67,
	32, 20, 31, -1000, -1000, -1000, 143, -101, -1000, -49,
	-1000, -1000, -1000, -1000, -1000, -2, -81, -86, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-60, -1000, -1000, -60, -1000, 609, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 9, -1000, -1000, 27, -1000, 26, -62, -60,
	-15, 73, -1000, -1000, -1000, -49, 21, -1000, -1000, -1000,
	-1000, -49, -1000, -1000, -1000, 203, 203, -1000, -1000, 143,
	-1000, -60, -1000, 203, 143, 143, 203, -62, 203, -1000,
	121, 121, 121, 121, 121, 121, -1000, -49, 121, -1000,
	-49, 121, 246, -60, 246, 246, 325, 325, -18, -1000,
	-1000, -1000, -1000, -1000, -1000, -60, -93, -1000, -83, -72,
	-1000, -1000, -89, -1000, 305, -1000, 305, -1000, 342, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	325, -1000, -1000, 90, -1000, -1000, -1000, -1000, -1000, 19,
	302, 143, 143, -1000, -1000, 143, -1000, -1000, 143, 334,
	-1000, 143, 119, -1000, -1000, 119, 119, 119, 119, 119,
	330, 119, 262, 119, 246, -1000, -1000, -1000, -1000, -1000,
	-1000, -60, -60, -1000, -3, 322, -1000, 316, 8, 246,
	246, 246, -7, -18, -1000, -1000, -1000, -1000, -1000, 310,
	-1000, -49, -1000, -1000, -1000, -1000, -1000, 305, -1000, 184,
	-1000, -1000, -1000, -60, -1000, -5, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -62, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -49, -1000, -49, -1000,
	-1000, -1000, -1000, -1000, -1000, -60, 8, -1000, -1000, -1000,
	246, -1000, -1000, -1000, -1000, -69, -1000, -1000, -49, -1000,
	-5, -1000, -1000, -1000, -1000, -60, 73, -1000, 288, 279,
	-1000, -1000, 320, -1000, -60, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -69, -114, -1000, 51, -1000, -1000, -110,
	241, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -60,
	184, -32, -1000, -1000, -1000, -118, -1000, -1000, -1000, -1000,
	-102, -1000, -60, -1000, -1000, 312, -1000, -60, -1000, -1000,
	-1000, -102, 51, -1000, 51,
}

var yyPgo = [...]int16{
	0, 684, 206, 675, 674, 672, 658, 644, 642, 641,
	640, 639, 24, 637, 636, 634, 632, 155, 45, 631,
	629, 28, 628, 151, 627, 625, 624, 623, 622, 621,
	618, 617, 616, 18, 610, 10, 43, 609, 16, 608,
	606, 13, 11, 605, 604, 603, 14, 602, 601, 600,
	599, 597, 26, 25, 596, 593, 592, 3, 2, 1,
	6, 32, 589, 15, 588, 30, 587, 584, 583, 581,
	577, 27, 575, 574, 573, 19, 572, 571, 40, 0,
	5, 569, 568, 161, 342, 282, 567, 20, 31, 564,
	563, 562, 42, 46, 561, 17, 560, 559, 558, 557,
	33, 12, 276, 556, 555, 39, 38, 554, 553, 9,
	7, 551, 550, 549, 548, 547, 546, 544, 227, 542,
	225, 224, 540, 539, 538, 537, 223, 195, 536, 535,
	533, 532, 529, 527, 526, 524, 523, 520, 519, 518,
	517, 516, 514, 22, 512, 505, 504, 501, 500, 498,
	172, 497, 163, 37, 158, 495, 159, 494, 492, 491,
	488, 487, 486, 484, 483, 482, 481, 480, 479, 478,
	477, 476, 475, 474, 473, 472, 471, 470, 469, 468,
	467, 465, 464, 462, 461, 453, 451, 449, 448, 447,
	54, 446, 21, 444, 439, 436, 435, 434, 431, 425,
	424, 423, 422, 421, 420, 4, 419, 418, 35, 417,
	416, 415, 411, 410, 408, 406, 405, 404, 402, 400,
	399, 396, 394, 393, 391, 387, 386, 380, 143, 379,
	377, 376, 375, 373, 372, 371, 369, 367, 366, 363,
	362, 361, 360, 359, 358, 357,
}

var yyR1 = [...]uint8{
	0, 1, 1, 1, 2, 2, 2, 2, 4, 3,
	83, 16, 16, 16, 17, 17, 17, 84, 85, 86,
	5, 71, 71, 14, 15, 15, 18, 18, 18, 18,
	18, 18, 18, 19, 24, 24, 24, 24, 24, 25,
	25, 25, 26, 26, 26, 26, 26, 26, 26, 27,
	28, 28, 87, 87, 88, 65, 65, 66, 67, 67,
	68, 68, 29, 29, 29, 29, 29, 30, 30, 30,
	30, 30, 30, 30, 30, 30, 30, 30, 30, 30,
	30, 31, 32, 32, 32, 32, 32, 32, 32, 32,
	20, 20, 20, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 89, 89, 90, 91,
	91, 91, 91, 91, 91, 91, 91, 92, 92, 93,
	93, 94, 95, 95, 96, 97, 98, 98, 99, 39,
	40, 43, 44, 45, 100, 100, 12, 13, 13, 101,
	101, 101, 46, 46, 41, 41, 41, 42, 42, 42,
	42, 42, 102, 103, 104, 105, 33, 34, 34, 34,
	35, 35, 35, 107, 108, 109, 110, 110, 110, 110,
	110, 110, 36, 106, 106, 106, 37, 37, 37, 38,
	111, 111, 22, 22, 22, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 112, 113, 114, 115, 118, 116, 117,
	120, 121, 119, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 69, 135, 135, 136,
	70, 47, 47, 48, 49, 49, 49, 49, 137, 137,
	138, 50, 50, 51, 51, 139, 139, 140, 52, 53,
	54, 54, 55, 55, 56, 56, 245, 6, 6, 7,
	8, 8, 57, 72, 72, 58, 58, 58, 59, 59,
	59, 59, 59, 59, 59, 142, 141, 9, 9, 10,
	11, 11, 60, 143, 143, 73, 73, 77, 77, 74,
	74, 75, 76, 78, 81, 81, 82, 62, 62, 61,
	79, 79, 64, 64, 63, 80, 144, 145, 146, 146,
	147, 148, 148, 149, 150, 150, 151, 152, 152, 153,
	154, 154, 155, 156, 157, 158, 159, 159, 160, 161,
	162, 162, 163, 164, 164, 164, 165, 166, 166, 167,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 190, 191, 193, 192, 192, 194,
	194, 195, 195, 197, 196, 196, 198, 198, 199, 199,
	200, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 234, 235, 233, 236, 240, 237, 238,
	239, 232, 232, 241, 241, 244, 242, 243,
}

var yyR2 = [...]int8{
	0, 0, 1, 3, 0, 1, 1, 1, 2, 5,
	1, 0, 1, 2, 1, 1, 1, 4, 4, 4,
	8, 1, 3, 3, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 4, 1, 4, 4, 4, 4, 4,
	4, 4, 0, 1, 3, 0, 1, 5, 0, 1,
	3, 5, 1, 2, 2, 2, 2, 4, 4, 2,
	2, 1, 3, 2, 4, 1, 3, 1, 3, 4,
	4, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 2, 0, 1, 2, 2, 1, 1, 2, 4,
	4, 4, 5, 5, 0, 1, 3, 1, 3, 0,
	1, 1, 3, 2, 0, 1, 2, 1, 1, 1,
	1, 1, 3, 2, 2, 2, 4, 0, 1, 2,
	1, 1, 1, 2, 2, 2, 1, 2, 1, 2,
	1, 1, 4, 0, 1, 2, 0, 1, 2, 1,
	1, 1, 0, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 0, 1, 2,
	3, 0, 1, 5, 2, 2, 2, 2, 0, 1,
	2, 0, 1, 2, 2, 0, 1, 2, 3, 4,
	2, 3, 2, 3, 0, 1, 3, 0, 1, 3,
	1, 3, 5, 2, 2, 0, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 3, 2, 0, 1, 3,
	1, 3, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 1, 1, 1, 3, 3,
	1, 1, 1, 3, 3, 0, 1, 1, 0, 1,
	1, 1, 1, 1, 0, 1, 1, 0, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 0, 1, 1,
	2, 1, 2, 1, 3, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 2,
	1, 0, 1, 2, 1, 1, 3, 2,
}

var yyChk = [...]int16{
	-1000, -1, -2, -3, -4, -5, -144, -145, 10, 11,
	7, -148, -146, 13, 14, -147, 12, -83, -79, 133,
	134, -2, -150, -151, 16, -149, 15, -83, -150, -16,
	-17, -84, -85, -86, -152, -153, 17, -71, -79, -17,
	-154, -155, -156, 19, 18, 21, 22, -14, 4, 9,
	-143, 8, -143, -143, 20, -22, -23, -112, -113, -114,
	-84, -85, -115, -118, -116, -117, -120, -121, -119, -122,
	-123, -124, -125, -102, -126, -127, -128, -129, -130, -131,
	-132, -133, -134, -69, -70, -207, -208, -209, -152, -210,
	-205, -211, -212, -214, -217, -213, -156, -215, -216, -218,
	-202, -219, -220, -221, -222, -223, -224, -225, -226, -227,
	-228, -230, 102, 71, 103, 104, 105, 106, 107, 109,
	82, 108, 111, 112, 113, 87, 114, 115, 116, 117,
	118, 119, 120, 121, 122, 123, 125, -15, -18, -19,
	-39, -40, -43, -44, -45, -36, -79, -198, -199, -106,
	82, 74, 86, 90, -79, -79, -79, -78, -81, -82,
	133, -47, -23, -48, -49, -231, 138, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -79, -143, 110, 110, 5, 6, -24, -25, -29,
	-30, -31, -32, -26, -27, -28, 53, 54, 55, 56,
	57, -167, -168, -169, -170, -171, -172, -173, -174, -175,
	-176, -177, -178, -179, -180, -181, -182, -183, -184, -185,
	-186, -187, -188, -189, -157, -158, -159, -160, -161, -162,
	-163, -164, -165, -166, 40, 19, 41, 42, 43, 44,
	45, 46, 47, 48, 49, 50, 51, 52, 20, 58,
	59, 60, 61, 62, 63, 64, 65, 66, 23, 24,
	25, 26, 27, 28, 29, 30, 31, 34, 35, 36,
	37, 38, 39, -100, -79, -100, -201, -200, -206, 99,
	73, 72, 91, 82, 74, -79, 132, -137, -138, -237,
	140, -52, -53, -54, -55, -232, -235, -236, -233, 146,
	147, 142, 139, -75, 126, -75, -75, -75, -78, -78,
	-78, -78, -78, -75, -78, -79, -78, -79, -75, -75,
	-75, -75, -78, -79, -78, -75, -75, -75, -135, -136,
	-229, 124, -63, 4, -18, -20, -21, -89, -90, -92,
	-208, -194, -195, -105, -33, -36, -109, -97, -98, -99,
	67, 68, -153, 69, 70, 72, 74, 73, -205, 92,
	-106, 95, -196, 79, 80, -197, 76, 78, 81, -87,
	-88, 4, -87, -87, -87, -87, -88, -87, -88, -93,
	-94, -154, -87, -87, -93, -93, -61, 4, -61, -87,
	-87, -87, -87, -87, -87, -67, -68, 4, -65, -66,
	4, -65, -12, 4, -12, -12, -100, -100, 137, 74,
	74, 82, 74, -95, -96, 21, -50, -51, -238, 149,
	-75, 143, 74, -80, 144, -80, 144, -79, -64, -79,
	-21, -91, -78, -73, -74, -75, -76, -77, -80, 67,
	135, 136, 128, 129, 127, 130, 131, 74, 74, -78,
	-71, -110, 96, 20, 97, 98, 75, -80, -75, 77,
	-75, -93, -93, -95, -79, -93, -95, -95, -93, -62,
	-78, -93, -190, -191, 32, -190, -190, -190, -190, -190,
	-75, -190, -75, -190, -41, -42, -102, -103, -104, -105,
	-92, -203, -204, 85, 88, -13, -46, -79, -80, -41,
	-41, -12, -12, -37, -38, -111, 100, 101, -79, -139,
	-140, -239, 148, -52, -53, 139, -80, -56, -245, -234,
	145, -63, -63, 6, 5, -12, 67, 17, 78, 5,
	-95, -95, -95, -95, 6, 5, -95, -192, -193, 33,
	-192, -192, -192, -192, -192, 5, 6, -192, 6, -192,
	-42, -79, -79, 89, 5, 6, -87, -101, 83, 84,
	-41, -33, -38, -6, -7, 4, -75, -63, -143, -79,
	-34, -35, -107, -108, -109, 93, 94, -78, -75, -75,
	-46, -101, -8, -57, -240, 138, -75, -35, -79, -110,
	5, 5, 5, 6, -79, -57, -72, -242, -243, 150,
	-58, -59, -141, -118, -120, -121, -126, -127, -142, -241,
	-228, 124, 111, -80, -80, 151, 154, -9, -59, -10,
	4, -79, -143, 111, 152, -11, -60, -244, 149, -79,
	5, 6, -79, -60, -58,
}

var yyDef = [...]int16{
	1, -2, 2, 5, 6, 7, 318, 0, 316, 317,
	4, 324, 0, 321, 322, 319, 320, 8, 10, 310,
	311, 3, 0, 325, 326, 324, 323, 11, 0, -2,
	12, 14, 15, 16, 0, 328, 329, 0, 21, 13,
	293, 293, 293, 0, 331, 332, 333, 182, 173, 0,
	0, 294, 0, 304, 330, -2, 183, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 293, 293, 293, 0, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	0, 293, 398, 399, 400, 401, 396, 402, 403, 0,
	0, 404, 406, 407, 409, 393, 410, 411, 412, 413,
	414, 415, 416, 417, 418, 419, 421, 0, 24, 26,
	27, 28, 29, 30, 31, 32, 0, 134, 134, 0,
	386, 387, 0, 174, 22, 17, 18, 19, 0, 305,
	306, 20, 184, 242, 248, 431, 0, 0, 0, 0,
	0, 304, 304, 304, 304, 304, 0, 304, 0, 304,
	0, 0, 0, 0, 0, 304, 0, 304, 0, 0,
	0, 237, 0, 405, 408, 23, 173, 90, 34, 35,
	36, 37, 38, 39, 40, 41, 62, 52, 52, 52,
	52, 52, 0, 52, 0, 71, 119, 52, 52, 75,
	119, 77, 119, 0, 0, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 52, 52, 44, 52, 52, 52,
	52, 58, 55, 55, 349, 350, 351, 352, 353, 354,
	355, 356, 357, 358, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 368, 369, 370, 371, 372, 334, 335,
	336, 337, 338, 339, 340, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 135, 0, 0, 134, 134, 0,
	0, 0, 0, 388, 389, 175, 122, 251, 249, 0,
	428, 244, 245, 246, 247, 0, 315, 315, 432, 424,
	426, 425, 422, 213, 301, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 152, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 238,
	0, 420, 240, 0, 25, -2, 91, 93, 94, 95,
	96, 97, 98, 99, 100, 101, 102, 103, 104, 105,
	106, 107, -2, 117, 118, 379, 381, 0, 304, 0,
	0, 0, 315, 126, 127, 0, 0, 385, 383, 63,
	53, 0, 64, 65, 66, 119, 119, 69, 70, 122,
	120, 0, 73, 119, 122, 122, 119, 304, 119, 42,
	373, 373, 373, 373, 373, 373, 59, 0, 373, 56,
	0, 373, 144, 315, 144, 144, 0, 0, 176, 392,
	390, 391, 397, 303, 123, 0, 255, 252, 431, 0,
	250, 315, 264, 260, 0, 262, 0, 239, 0, 312,
	92, 108, 109, 110, 111, 112, 113, 114, 115, 116,
	295, 296, 299, 300, 302, 297, 298, 380, 382, 155,
	0, 165, 166, 0, 168, 170, 171, 125, 128, 0,
	0, 122, 122, 72, 121, 122, 76, 78, 122, 0,
	307, 122, 377, 374, 375, 377, 377, 377, 377, 377,
	0, 377, 0, 377, 129, 145, 147, 148, 149, 150,
	151, 0, 0, 394, 0, 0, 137, 52, 139, 130,
	131, 144, 0, 172, 177, 179, 180, 181, 124, 267,
	256, 0, 430, 253, 254, 429, 258, 0, 265, 293,
	423, 261, 263, 0, 314, 157, 167, 169, 384, 54,
	67, 68, 74, 79, 304, 309, 80, 43, 378, 376,
	45, 46, 47, 48, 49, 60, 0, 50, 0, 51,
	146, 153, 154, 395, 136, 315, 139, 143, 140, 141,
	132, 133, 178, 243, 268, 0, 257, 259, 0, 313,
	156, 158, 160, 161, 162, 0, 0, 308, 0, 0,
	138, 142, 0, 270, 0, 427, 266, 159, 163, 164,
	61, 57, 269, 0, 0, 271, 275, 315, 315, 0,
	287, 276, 278, 279, 280, 281, 282, 283, 284, 0,
	293, 0, 434, 273, 274, 0, 437, 272, 277, 288,
	0, 286, 0, 433, 436, 0, 290, 0, 435, 285,
	289, 0, 275, 291, 292,
}

var yyTok1 = [...]int8{
	1,
}

var yyTok2 = [...]uint8{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155,
}

var yyTok3 = [...]int8{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := int(yyPact[state])
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && int(yyChk[int(yyAct[n])]) == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || int(yyExca[i+1]) != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := int(yyExca[i])
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = int(yyTok1[0])
		goto out
	}
	if char < len(yyTok1) {
		token = int(yyTok1[char])
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = int(yyTok2[char-yyPrivate])
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = int(yyTok3[i+0])
		if token == char {
			token = int(yyTok3[i+1])
			goto out
		}
	}

out:
	if token == 0 {
		token = int(yyTok2[1]) /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = int(yyPact[yystate])
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = int(yyAct[yyn])
	if int(yyChk[yyn]) == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = int(yyDef[yystate])
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && int(yyExca[xi+1]) == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = int(yyExca[xi+0])
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = int(yyExca[xi+1])
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = int(yyPact[yyS[yyp].yys]) + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = int(yyAct[yyn]) /* simulate a shift of "error" */
					if int(yyChk[yystate]) == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= int(yyR2[yyn])
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = int(yyR1[yyn])
	yyg := int(yyPgo[yyn])
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = int(yyAct[yyg])
	} else {
		yystate = int(yyAct[yyj])
		if int(yyChk[yystate]) != -yyn {
			yystate = int(yyAct[yyg])
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:524
		{
			yyVAL.statements = []Statement{}
			yylex.(*Parser).result = yyVAL.statements
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:529
		{
			yyVAL.statements = []Statement{yyDollar[1].statement}
			yylex.(*Parser).result = yyVAL.statements
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:534
		{
			if yyDollar[3].statement != nil {
				yyDollar[1].statements = append(yyDollar[1].statements, yyDollar[3].statement)
			}
			yyVAL.statements = yyDollar[1].statements
			yylex.(*Parser).result = yyDollar[1].statements
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:544
		{
			yyVAL.statement = nil
		}
	case 5:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:548
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:552
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:556
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 8:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:562
		{
			yyVAL.statement = UseStatement{
				DbName: yyDollar[2].stringItem,
			}
		}
	case 9:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser/parser.go.y:570
		{
			yyVAL.statement = CreateDatabaseStatement{
				IfNotExists:     yyDollar[3].keyword,
				DbName:          yyDollar[4].stringItem,
				DatabaseOptions: yyDollar[5].item.(DatabaseOptions),
			}
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:580
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 11:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:585
		{
			yyVAL.item = DatabaseOptions{}
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:589
		{
			yyVAL.item = yyDollar[1].item
		}
	case 13:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:593
		{
			// TODO: error handling
			merged := yyDollar[1].item.(DatabaseOptions)
			mergo.Merge(&merged, yyDollar[2].item.(DatabaseOptions))
			yyVAL.item = merged
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:602
		{
			yyVAL.item = DatabaseOptions{
				DefaultCharset: yyDollar[1].stringItem,
			}
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:608
		{
			yyVAL.item = DatabaseOptions{
				DefaultCollate: yyDollar[1].stringItem,
			}
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:614
		{
			yyVAL.item = DatabaseOptions{
				DefaultEncryption: yyDollar[1].stringItem,
			}
		}
	case 17:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:622
		{
			yyVAL.stringItem = yyDollar[4].stringItem
		}
	case 18:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:628
		{
			yyVAL.stringItem = yyDollar[4].stringItem
		}
	case 19:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:634
		{
			yyVAL.stringItem = yyDollar[4].stringItem
		}
	case 20:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser/parser.go.y:640
		{
			yyVAL.statement = CreateTableStatement{
				DbName:            yyDollar[5].stringList[0],
				Temporary:         yyDollar[2].keyword,
				IfNotExists:       yyDollar[4].keyword,
				TableName:         yyDollar[5].stringList[1],
				CreateDefinitions: yyDollar[6].list,
				TableOptions:      yyDollar[7].item.(TableOptions),
				Partitions:        yyDollar[8].item.(PartitionConfig),
			}
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:654
		{
			yyVAL.stringList = []string{"", yyDollar[1].stringItem}
		}
	case 22:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:658
		{
			yyVAL.stringList = []string{yyDollar[1].stringItem, yyDollar[3].stringItem}
		}
	case 23:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:664
		{
			yyVAL.list = yyDollar[2].list
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:670
		{
			yyVAL.list = []interface{}{yyDollar[1].item}
		}
	case 25:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:674
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].item)
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:680
		{
			yyVAL.item = yyDollar[1].item.(*ColumnDefinition)
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:684
		{
			yyVAL.item = yyDollar[1].item.(*IndexDefinition)
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:688
		{
			yyVAL.item = yyDollar[1].item.(*FullTextIndexDefinition)
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:692
		{
			yyVAL.item = yyDollar[1].item.(*PrimaryKeyDefinition)
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:696
		{
			yyVAL.item = yyDollar[1].item.(*UniqueKeyDefinition)
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:700
		{
			yyVAL.item = yyDollar[1].item.(*ForeignKeyDefinition)
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:704
		{
			yyVAL.item = yyDollar[1].item.(*CheckConstraintDefinition)
		}
	case 33:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:710
		{
			columnOptions := yyDollar[3].item.(ColumnOptions)
			if columnOptions.Nullability == "" {
				columnOptions.Nullability = "NULL"
			}
			yyVAL.item = &ColumnDefinition{
				ColumnName:    yyDollar[1].stringItem,
				DataType:      yyDollar[2].item,
				ColumnOptions: yyDollar[3].item.(ColumnOptions),
			}
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:724
		{
			yyVAL.item = yyDollar[1].item
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:728
		{
			yyVAL.item = yyDollar[1].item
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:732
		{
			yyVAL.item = yyDollar[1].item
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:736
		{
			yyVAL.item = yyDollar[1].item
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:740
		{
			yyVAL.item = yyDollar[1].item
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:746
		{
			yyVAL.item = yyDollar[1].item
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:750
		{
			yyVAL.item = yyDollar[1].item
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:754
		{
			yyVAL.item = yyDollar[1].item
		}
	case 42:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:760
		{
			yyVAL.item = IntegerType{
				Name:     "bit",
				FieldLen: yyDollar[2].stringItem,
			}
		}
	case 43:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:767
		{
			yyVAL.item = IntegerType{
				Name:     "tinyint",
				FieldLen: yyDollar[2].stringItem,
				Unsigned: yyDollar[3].keyword,
				Zerofill: yyDollar[4].keyword,
			}
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:776
		{
			// Bool type is synonym of tinyint(1)
			yyVAL.item = IntegerType{
				Name:     "tinyint",
				FieldLen: "1",
			}
		}
	case 45:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:784
		{
			yyVAL.item = IntegerType{
				Name:     "smallint",
				FieldLen: yyDollar[2].stringItem,
				Unsigned: yyDollar[3].keyword,
				Zerofill: yyDollar[4].keyword,
			}
		}
	case 46:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:793
		{
			yyVAL.item = IntegerType{
				Name:     "mediumint",
				FieldLen: yyDollar[2].stringItem,
				Unsigned: yyDollar[3].keyword,
				Zerofill: yyDollar[4].keyword,
			}
		}
	case 47:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:802
		{
			yyVAL.item = IntegerType{
				Name:     "int",
				FieldLen: yyDollar[2].stringItem,
				Unsigned: yyDollar[3].keyword,
				Zerofill: yyDollar[4].keyword,
			}
		}
	case 48:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:811
		{
			yyVAL.item = IntegerType{
				Name:     "bigint",
				FieldLen: yyDollar[2].stringItem,
				Unsigned: yyDollar[3].keyword,
				Zerofill: yyDollar[4].keyword,
			}
		}
	case 49:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:822
		{
			fieldLen := ""
			fieldScale := ""
			if len(yyDollar[2].stringList) >= 1 {
				fieldLen = yyDollar[2].stringList[0]
				if len(yyDollar[2].stringList) >= 2 {
					fieldScale = yyDollar[2].stringList[1]
				}
			}
			yyVAL.item = FixedPointType{
				Name:       "decimal",
				FieldLen:   fieldLen,
				FieldScale: fieldScale,
				Unsigned:   yyDollar[3].keyword,
				Zerofill:   yyDollar[4].keyword,
			}
		}
	case 50:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:842
		{
			fieldLen := ""
			fieldScale := ""
			if len(yyDollar[2].stringList) >= 2 {
				fieldLen = yyDollar[2].stringList[0]
				fieldScale = yyDollar[2].stringList[1]
			}
			yyVAL.item = FixedPointType{
				Name:       "float",
				FieldLen:   fieldLen,
				FieldScale: fieldScale,
				Unsigned:   yyDollar[3].keyword,
				Zerofill:   yyDollar[4].keyword,
			}
		}
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:858
		{
			fieldLen := ""
			fieldScale := ""
			if len(yyDollar[2].stringList) >= 2 {
				fieldLen = yyDollar[2].stringList[0]
				fieldScale = yyDollar[2].stringList[1]
			}
			yyVAL.item = FixedPointType{
				Name:       "double",
				FieldLen:   fieldLen,
				FieldScale: fieldScale,
				Unsigned:   yyDollar[3].keyword,
				Zerofill:   yyDollar[4].keyword,
			}
		}
	case 52:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:875
		{
			yyVAL.stringItem = ""
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:879
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:885
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 55:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:890
		{
			yyVAL.stringList = []string{}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:894
		{
			yyVAL.stringList = yyDollar[1].stringList
		}
	case 57:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser/parser.go.y:900
		{
			yyVAL.stringList = []string{yyDollar[2].stringItem, yyDollar[4].stringItem}
		}
	case 58:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:905
		{
			yyVAL.stringList = []string{}
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:909
		{
			yyVAL.stringList = yyDollar[1].stringList
		}
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:915
		{
			yyVAL.stringList = []string{yyDollar[2].stringItem}
		}
	case 61:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser/parser.go.y:919
		{
			yyVAL.stringList = []string{yyDollar[2].stringItem, yyDollar[4].stringItem}
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:925
		{
			yyVAL.item = DateAndTimeType{
				Name: "date",
			}
		}
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:931
		{
			fieldLen := ""
			if yyDollar[2].stringItem != "" {
				fieldLen = yyDollar[2].stringItem
			}
			yyVAL.item = DateAndTimeType{
				Name:     "time",
				FieldLen: fieldLen,
			}
		}
	case 64:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:942
		{
			fieldLen := ""
			if yyDollar[2].stringItem != "" {
				fieldLen = yyDollar[2].stringItem
			}
			yyVAL.item = DateAndTimeType{
				Name:     "datetime",
				FieldLen: fieldLen,
			}
		}
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:953
		{
			fieldLen := ""
			if yyDollar[2].stringItem != "" {
				fieldLen = yyDollar[2].stringItem
			}
			yyVAL.item = DateAndTimeType{
				Name:     "timestamp",
				FieldLen: fieldLen,
			}
		}
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:964
		{
			fieldLen := ""
			if yyDollar[2].stringItem != "" {
				fieldLen = yyDollar[2].stringItem
			}
			yyVAL.item = DateAndTimeType{
				Name:     "year",
				FieldLen: fieldLen,
			}
		}
	case 67:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:977
		{
			fieldLen := ""
			if yyDollar[2].stringItem != "" {
				fieldLen = yyDollar[2].stringItem
			}
			yyVAL.item = StringType{
				Name:      "char",
				FieldLen:  fieldLen,
				Charset:   yyDollar[3].stringItem,
				Collation: yyDollar[4].stringItem,
			}
		}
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:990
		{
			yyVAL.item = StringType{
				Name:      "varchar",
				FieldLen:  yyDollar[2].stringItem,
				Charset:   yyDollar[3].stringItem,
				Collation: yyDollar[4].stringItem,
			}
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:999
		{
			fieldLen := ""
			if yyDollar[2].stringItem != "" {
				fieldLen = yyDollar[2].stringItem
			}
			yyVAL.item = StringType{
				Name:     "binary",
				FieldLen: fieldLen,
			}
		}
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1010
		{
			yyVAL.item = StringType{
				Name:     "varbinary",
				FieldLen: yyDollar[2].stringItem,
			}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1017
		{
			yyVAL.item = StringType{
				Name: "tinyblob",
			}
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1023
		{
			yyVAL.item = StringType{
				Name:      "tinytext",
				Charset:   yyDollar[2].stringItem,
				Collation: yyDollar[3].stringItem,
			}
		}
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1031
		{
			fieldLen := ""
			if yyDollar[2].stringItem != "" {
				fieldLen = yyDollar[2].stringItem
			}
			yyVAL.item = StringType{
				Name:     "blob",
				FieldLen: fieldLen,
			}
		}
	case 74:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:1042
		{
			fieldLen := ""
			if yyDollar[2].stringItem != "" {
				fieldLen = yyDollar[2].stringItem
			}
			yyVAL.item = StringType{
				Name:      "text",
				FieldLen:  fieldLen,
				Charset:   yyDollar[3].stringItem,
				Collation: yyDollar[4].stringItem,
			}
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1055
		{
			yyVAL.item = StringType{
				Name: "mediumblob",
			}
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1061
		{
			yyVAL.item = StringType{
				Name:      "mediumtext",
				Charset:   yyDollar[2].stringItem,
				Collation: yyDollar[3].stringItem,
			}
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1069
		{
			yyVAL.item = StringType{
				Name: "longblob",
			}
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1075
		{
			yyVAL.item = StringType{
				Name:      "longtext",
				Charset:   yyDollar[2].stringItem,
				Collation: yyDollar[3].stringItem,
			}
		}
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:1083
		{
			yyVAL.item = StringListType{
				Name:      "enum",
				Values:    yyDollar[2].stringList,
				Charset:   yyDollar[3].stringItem,
				Collation: yyDollar[4].stringItem,
			}
		}
	case 80:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:1092
		{
			yyVAL.item = StringListType{
				Name:      "set",
				Values:    yyDollar[2].stringList,
				Charset:   yyDollar[3].stringItem,
				Collation: yyDollar[4].stringItem,
			}
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1103
		{
			yyVAL.item = JsonType{
				Name: "json",
			}
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1112
		{
			yyVAL.item = SpatialType{
				Name: "geometry",
			}
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1118
		{
			yyVAL.item = SpatialType{
				Name: "point",
			}
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1124
		{
			yyVAL.item = SpatialType{
				Name: "linestring",
			}
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1130
		{
			yyVAL.item = SpatialType{
				Name: "polygon",
			}
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1136
		{
			yyVAL.item = SpatialType{
				Name: "multipoint",
			}
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1142
		{
			yyVAL.item = SpatialType{
				Name: "multilinestring",
			}
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1148
		{
			yyVAL.item = SpatialType{
				Name: "multipolygon",
			}
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1154
		{
			yyVAL.item = SpatialType{
				Name: "geometrycollection",
			}
		}
	case 90:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:1161
		{
			yyVAL.item = ColumnOptions{}
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1165
		{
			yyVAL.item = yyDollar[1].item
		}
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1169
		{
			// TODO: error handling
			merged := yyDollar[1].item.(ColumnOptions)
			mergo.Merge(&merged, yyDollar[2].item.(ColumnOptions))
			yyVAL.item = merged
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1178
		{
			yyVAL.item = ColumnOptions{
				Nullability: yyDollar[1].stringItem,
			}
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1184
		{
			yyVAL.item = ColumnOptions{
				Default: yyDollar[1].stringItem,
			}
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1190
		{
			yyVAL.item = ColumnOptions{
				Visibility: yyDollar[1].stringItem,
			}
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1196
		{
			yyVAL.item = ColumnOptions{
				AutoIncrement: yyDollar[1].keyword,
			}
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1202
		{
			yyVAL.item = ColumnOptions{
				Unique: yyDollar[1].keyword,
			}
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1208
		{
			yyVAL.item = ColumnOptions{
				Primary: yyDollar[1].keyword,
			}
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1214
		{
			yyVAL.item = ColumnOptions{
				Comment: yyDollar[1].stringItem,
			}
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1220
		{
			yyVAL.item = ColumnOptions{
				ReferenceDefinition: yyDollar[1].item.(ReferenceDefinition),
			}
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1226
		{
			yyVAL.item = ColumnOptions{
				CheckConstraintDefinition: yyDollar[1].item.(CheckConstraintDefinition),
			}
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1232
		{
			yyVAL.item = ColumnOptions{
				OnUpdate: yyDollar[1].stringItem,
			}
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1238
		{
			yyVAL.item = ColumnOptions{
				GeneratedAs: yyDollar[1].stringItem,
			}
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1244
		{
			yyVAL.item = ColumnOptions{
				GeneratedColumnType: yyDollar[1].stringItem,
			}
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1250
		{
			yyVAL.item = ColumnOptions{
				Srid: yyDollar[1].stringItem,
			}
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1258
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1262
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1268
		{
			yyVAL.stringItem = "CURRENT_TIMESTAMP"
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1274
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1278
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1282
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1286
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1290
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1294
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1298
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1302
		{
			yyVAL.stringItem = ""
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1308
		{
			yyVAL.stringItem = "VISIBLE"
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1312
		{
			yyVAL.stringItem = "INVISIBLE"
		}
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:1317
		{
			yyVAL.stringItem = ""
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1321
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1327
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 122:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:1332
		{
			yyVAL.stringItem = ""
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1336
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1342
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1348
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1354
		{
			yyVAL.stringItem = "VIRTUAL"
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1358
		{
			yyVAL.stringItem = "STORED"
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1364
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 129:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:1370
		{
			yyVAL.item = &IndexDefinition{
				IndexName:    yyDollar[2].stringItem,
				KeyPartList:  yyDollar[3].keyPartList,
				IndexOptions: yyDollar[4].item.(IndexOptions),
			}
		}
	case 130:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:1380
		{
			yyVAL.item = &FullTextIndexDefinition{
				IndexName:    yyDollar[2].stringItem,
				KeyPartList:  yyDollar[3].keyPartList,
				IndexOptions: yyDollar[4].item.(IndexOptions),
			}
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:1390
		{
			yyVAL.item = &PrimaryKeyDefinition{
				ConstraintName: yyDollar[1].stringItem,
				KeyPartList:    yyDollar[3].keyPartList,
				IndexOptions:   yyDollar[4].item.(IndexOptions),
			}
		}
	case 132:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser/parser.go.y:1400
		{
			yyVAL.item = &UniqueKeyDefinition{
				ConstraintName: yyDollar[1].stringItem,
				IndexName:      yyDollar[3].stringItem,
				KeyPartList:    yyDollar[4].keyPartList,
				IndexOptions:   yyDollar[5].item.(IndexOptions),
			}
		}
	case 133:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser/parser.go.y:1411
		{
			yyVAL.item = &ForeignKeyDefinition{
				ConstraintName:      yyDollar[1].stringItem,
				IndexName:           yyDollar[3].stringItem,
				KeyPartList:         yyDollar[4].keyPartList,
				ReferenceDefinition: yyDollar[5].item.(ReferenceDefinition),
			}
		}
	case 134:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:1421
		{
			yyVAL.stringItem = ""
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1425
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1431
		{
			yyVAL.keyPartList = yyDollar[2].keyPartList
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1437
		{
			yyVAL.keyPartList = []KeyPart{yyDollar[1].item.(KeyPart)}
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1441
		{
			yyVAL.keyPartList = append(yyDollar[1].keyPartList, yyDollar[3].item.(KeyPart))
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:1446
		{
			yyVAL.stringItem = ""
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1450
		{
			yyVAL.stringItem = "ASC"
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1454
		{
			yyVAL.stringItem = "DESC"
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1460
		{
			yyVAL.item = KeyPart{
				Column: yyDollar[1].stringItem,
				Length: yyDollar[2].stringItem,
				Order:  yyDollar[3].stringItem,
			}
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1468
		{
			yyVAL.item = KeyPart{
				Column: yyDollar[1].stringItem,
				Order:  yyDollar[2].stringItem,
			}
		}
	case 144:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:1476
		{
			yyVAL.item = IndexOptions{}
		}
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1480
		{
			yyVAL.item = yyDollar[1].item
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1484
		{
			// TODO: error handling
			merged := yyDollar[1].item.(IndexOptions)
			mergo.Merge(&merged, yyDollar[2].item.(IndexOptions))
			yyVAL.item = merged
		}
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1493
		{
			yyVAL.item = IndexOptions{
				KeyBlockSize: yyDollar[1].stringItem,
			}
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1499
		{
			yyVAL.item = IndexOptions{
				IndexType: yyDollar[1].stringItem,
			}
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1505
		{
			yyVAL.item = IndexOptions{
				Parser: yyDollar[1].stringItem,
			}
		}
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1511
		{
			yyVAL.item = IndexOptions{
				Comment: yyDollar[1].stringItem,
			}
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1517
		{
			yyVAL.item = IndexOptions{
				Visibility: yyDollar[1].stringItem,
			}
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1525
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1531
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1537
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1543
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:1549
		{
			yyVAL.item = ReferenceDefinition{
				TableName:        yyDollar[2].stringList[1],
				KeyPartList:      yyDollar[3].keyPartList,
				ReferenceOptions: yyDollar[4].item.(ReferenceOptions),
			}
		}
	case 157:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:1558
		{
			yyVAL.item = ReferenceOptions{}
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1562
		{
			yyVAL.item = yyDollar[1].item
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1566
		{
			// TODO: error handling
			merged := yyDollar[1].item.(ReferenceOptions)
			mergo.Merge(&merged, yyDollar[2].item.(ReferenceOptions))
			yyVAL.item = merged
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1575
		{
			yyVAL.item = ReferenceOptions{
				Match: yyDollar[1].stringItem,
			}
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1581
		{
			yyVAL.item = ReferenceOptions{
				OnDelete: yyDollar[1].stringItem,
			}
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1587
		{
			yyVAL.item = ReferenceOptions{
				OnUpdate: yyDollar[1].stringItem,
			}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1595
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1601
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1607
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1613
		{
			yyVAL.stringItem = "CASCADE"
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1617
		{
			yyVAL.stringItem = "SET NULL"
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1621
		{
			yyVAL.stringItem = "RESTRICT"
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1625
		{
			yyVAL.stringItem = "SET DEFAULT"
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1629
		{
			yyVAL.stringItem = "RESTRICT"
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1633
		{
			yyVAL.stringItem = "CURRENT_TIMESTAMP"
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:1639
		{
			yyVAL.item = &CheckConstraintDefinition{
				ConstraintName:         yyDollar[1].stringItem,
				Check:                  yyDollar[3].token.Literal,
				CheckConstraintOptions: yyDollar[4].item.(CheckConstraintOptions),
			}
		}
	case 173:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:1648
		{
			yyVAL.stringItem = ""
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1652
		{
			yyVAL.stringItem = ""
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1656
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:1661
		{
			yyVAL.item = CheckConstraintOptions{}
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1665
		{
			yyVAL.item = yyDollar[1].item
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1669
		{
			// TODO: error handling
			merged := yyDollar[1].item.(CheckConstraintOptions)
			mergo.Merge(&merged, yyDollar[2].item.(CheckConstraintOptions))
			yyVAL.item = merged
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1678
		{
			yyVAL.item = CheckConstraintOptions{
				Enforcement: yyDollar[1].stringItem,
			}
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1686
		{
			yyVAL.stringItem = "ENFORCED"
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1690
		{
			yyVAL.stringItem = "NOT ENFORCED"
		}
	case 182:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:1695
		{
			yyVAL.item = TableOptions{}
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1699
		{
			yyVAL.item = yyDollar[1].item
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:1703
		{
			// TODO: error handling
			merged := yyDollar[1].item.(TableOptions)
			mergo.Merge(&merged, yyDollar[2].item.(TableOptions))
			yyVAL.item = merged
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1712
		{
			yyVAL.item = TableOptions{
				AutoExtendedSize: yyDollar[1].stringItem,
			}
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1718
		{
			yyVAL.item = TableOptions{
				AutoIncrement: yyDollar[1].stringItem,
			}
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1724
		{
			yyVAL.item = TableOptions{
				AvgRowLength: yyDollar[1].stringItem,
			}
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1730
		{
			yyVAL.item = TableOptions{
				DefaultCharset: yyDollar[1].stringItem,
			}
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1736
		{
			yyVAL.item = TableOptions{
				DefaultCollate: yyDollar[1].stringItem,
			}
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1742
		{
			yyVAL.item = TableOptions{
				Checksum: yyDollar[1].stringItem,
			}
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1748
		{
			yyVAL.item = TableOptions{
				Comment: yyDollar[1].stringItem,
			}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1754
		{
			yyVAL.item = TableOptions{
				Compression: yyDollar[1].stringItem,
			}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1760
		{
			yyVAL.item = TableOptions{
				Connection: yyDollar[1].stringItem,
			}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1766
		{
			yyVAL.item = TableOptions{
				DataDirectory: yyDollar[1].stringItem,
			}

		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1773
		{
			yyVAL.item = TableOptions{
				IndexDirectory: yyDollar[1].stringItem,
			}

		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1780
		{
			yyVAL.item = TableOptions{
				DelayKeyWrite: yyDollar[1].stringItem,
			}

		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1787
		{
			yyVAL.item = TableOptions{
				Encryption: yyDollar[1].stringItem,
			}
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1793
		{
			yyVAL.item = TableOptions{
				Engine: yyDollar[1].stringItem,
			}
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1799
		{
			yyVAL.item = TableOptions{
				EngineAttribute: yyDollar[1].stringItem,
			}
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1805
		{
			yyVAL.item = TableOptions{
				InsertMethod: yyDollar[1].stringItem,
			}
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1811
		{
			yyVAL.item = TableOptions{
				KeyBlockSize: yyDollar[1].stringItem,
			}
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1817
		{
			yyVAL.item = TableOptions{
				MaxRows: yyDollar[1].stringItem,
			}
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1823
		{
			yyVAL.item = TableOptions{
				MinRows: yyDollar[1].stringItem,
			}
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1829
		{
			yyVAL.item = TableOptions{
				PackKeys: yyDollar[1].stringItem,
			}
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1835
		{
			yyVAL.item = TableOptions{
				Password: yyDollar[1].stringItem,
			}
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1841
		{
			yyVAL.item = TableOptions{
				RowFormat: yyDollar[1].stringItem,
			}
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1847
		{
			yyVAL.item = TableOptions{
				SecondaryEngineAttribute: yyDollar[1].stringItem,
			}
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1853
		{
			yyVAL.item = TableOptions{
				StatsAutoRecalc: yyDollar[1].stringItem,
			}
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1859
		{
			yyVAL.item = TableOptions{
				StatsPersistent: yyDollar[1].stringItem,
			}
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1865
		{
			yyVAL.item = TableOptions{
				StatsSamplePages: yyDollar[1].stringItem,
			}
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1871
		{
			yyVAL.item = TableOptions{
				TableSpace:        yyDollar[1].stringList[0],
				TableSpaceStorage: yyDollar[1].stringList[1],
			}
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:1878
		{
			yyVAL.item = TableOptions{
				Union: yyDollar[1].stringList,
			}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1886
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1892
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1898
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1904
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1910
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1916
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1922
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1928
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1934
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1940
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1946
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1952
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1958
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1964
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1970
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1976
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1982
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1988
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:1994
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2000
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2006
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2012
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2018
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2024
		{
			yyVAL.stringList = []string{yyDollar[2].stringItem, yyDollar[3].stringItem}
		}
	case 237:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:2029
		{
			yyVAL.stringItem = ""
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2033
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2039
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2045
		{
			yyVAL.stringList = yyDollar[3].stringList
		}
	case 241:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:2050
		{
			yyVAL.item = PartitionConfig{}
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2054
		{
			yyVAL.item = yyDollar[1].item
		}
	case 243:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser/parser.go.y:2060
		{
			yyVAL.item = PartitionConfig{
				PartitionBy:          yyDollar[1].item.(PartitionBy),
				Partitions:           yyDollar[2].stringItem,
				SubpartitionBy:       yyDollar[3].item.(PartitionBy),
				Subpartitions:        yyDollar[4].stringItem,
				PartitionDefinitions: yyDollar[5].partitionDefinitionList,
			}
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2072
		{
			yyVAL.item = yyDollar[2].item
		}
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2076
		{
			yyVAL.item = yyDollar[2].item
		}
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2080
		{
			yyVAL.item = yyDollar[2].item
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2084
		{
			yyVAL.item = yyDollar[2].item
		}
	case 248:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:2089
		{
			yyVAL.stringItem = ""
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2093
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2099
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 251:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:2104
		{
			yyVAL.item = PartitionBy{}
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2108
		{
			yyVAL.item = yyDollar[1].item
		}
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2114
		{
			yyVAL.item = yyDollar[2].item
		}
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2118
		{
			yyVAL.item = yyDollar[2].item
		}
	case 255:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:2123
		{
			yyVAL.stringItem = ""
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2127
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2133
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2139
		{
			yyVAL.item = PartitionBy{
				Type:       "HASH",
				Expression: yyDollar[3].stringItem,
			}
		}
	case 259:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser/parser.go.y:2148
		{
			yyVAL.item = PartitionBy{
				Type:    "KEY",
				Columns: yyDollar[4].stringList,
			}
		}
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2157
		{
			yyVAL.item = PartitionBy{
				Type:       "RANGE",
				Expression: yyDollar[2].stringItem,
			}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2164
		{
			yyVAL.item = PartitionBy{
				Type:    "RANGE COLUMNS",
				Columns: yyDollar[3].stringList,
			}
		}
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2173
		{
			yyVAL.item = PartitionBy{
				Type:       "LIST",
				Expression: yyDollar[2].stringItem,
			}
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2180
		{
			yyVAL.item = PartitionBy{
				Type:    "LIST COLUMNS",
				Columns: yyDollar[3].stringList,
			}
		}
	case 264:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:2188
		{

		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2192
		{

		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2198
		{

		}
	case 267:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:2203
		{
			yyVAL.partitionDefinitionList = []PartitionDefinition{}
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2207
		{
			yyVAL.partitionDefinitionList = yyDollar[1].partitionDefinitionList
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2213
		{
			yyVAL.partitionDefinitionList = yyDollar[2].partitionDefinitionList
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2219
		{
			yyVAL.partitionDefinitionList = []PartitionDefinition{yyDollar[1].item.(PartitionDefinition)}
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2223
		{
			yyVAL.partitionDefinitionList = append(yyDollar[1].partitionDefinitionList, yyDollar[3].item.(PartitionDefinition))
		}
	case 272:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser/parser.go.y:2229
		{
			yyVAL.item = PartitionDefinition{
				Name:             yyDollar[2].stringItem,
				Operator:         yyDollar[3].stringList[0],
				ValueExpression:  yyDollar[3].stringList[1],
				PartitionOptions: yyDollar[4].item.(PartitionOptions),
				Subpartitions:    yyDollar[5].subpartitionDefinitionList,
			}
		}
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2241
		{
			yyVAL.stringList = []string{"LESS THAN", yyDollar[2].stringItem}
		}
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2245
		{
			yyVAL.stringList = []string{"IN", yyDollar[2].stringItem}
		}
	case 275:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:2250
		{
			yyVAL.item = PartitionOptions{}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2254
		{
			yyVAL.item = yyDollar[1].item
		}
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2258
		{
			// TODO: error handling
			merged := yyDollar[1].item.(PartitionOptions)
			mergo.Merge(&merged, yyDollar[2].item.(PartitionOptions))
			yyVAL.item = merged
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2267
		{
			yyVAL.item = PartitionOptions{
				Engine: yyDollar[1].stringItem,
			}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2273
		{
			yyVAL.item = PartitionOptions{
				Comment: yyDollar[1].stringItem,
			}
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2279
		{
			yyVAL.item = PartitionOptions{
				DataDirectory: yyDollar[1].stringItem,
			}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2285
		{
			yyVAL.item = PartitionOptions{
				IndexDirectory: yyDollar[1].stringItem,
			}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2291
		{
			yyVAL.item = PartitionOptions{
				MaxRows: yyDollar[1].stringItem,
			}
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2297
		{
			yyVAL.item = PartitionOptions{
				MinRows: yyDollar[1].stringItem,
			}
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2303
		{
			yyVAL.item = PartitionOptions{
				TableSpace: yyDollar[1].stringItem,
			}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2311
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2317
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 287:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:2322
		{
			yyVAL.subpartitionDefinitionList = []SubpartitionDefinition{}
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2326
		{
			yyVAL.subpartitionDefinitionList = yyDollar[1].subpartitionDefinitionList
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2332
		{
			yyVAL.subpartitionDefinitionList = yyDollar[2].subpartitionDefinitionList
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2338
		{
			yyVAL.subpartitionDefinitionList = []SubpartitionDefinition{yyDollar[1].item.(SubpartitionDefinition)}
		}
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2342
		{
			yyVAL.subpartitionDefinitionList = append(yyDollar[1].subpartitionDefinitionList, yyDollar[3].item.(SubpartitionDefinition))
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2348
		{
			yyVAL.item = SubpartitionDefinition{
				Name:             yyDollar[2].stringItem,
				PartitionOptions: yyDollar[3].item.(PartitionOptions),
			}
		}
	case 293:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:2357
		{
			yyVAL.keyword = false
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2361
		{
			yyVAL.keyword = true
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2367
		{
			yyVAL.stringItem = "TRUE"
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2371
		{
			yyVAL.stringItem = "FALSE"
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2377
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2381
		{
			yyVAL.stringItem = "0x" + yyDollar[1].token.Literal[1:len(yyDollar[1].token.Literal)-1]
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2387
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2391
		{
			yyVAL.stringItem = "0b" + yyDollar[1].token.Literal[1:len(yyDollar[1].token.Literal)-1]
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2397
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2403
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2409
		{
			yyVAL.stringItem = yyDollar[2].token.Literal
		}
	case 304:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:2414
		{
			yyVAL.stringItem = ""
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2418
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2424
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2430
		{
			yyVAL.stringList = []string{yyDollar[1].stringItem}
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2434
		{
			yyVAL.stringList = append(yyDollar[1].stringList, yyDollar[3].stringItem)
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2440
		{
			yyVAL.stringList = yyDollar[2].stringList
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2446
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2450
		{
			yyVAL.stringItem = yyDollar[1].token.Submatches[0]
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2456
		{
			yyVAL.stringList = []string{yyDollar[1].stringItem}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2460
		{
			yyVAL.stringList = append(yyDollar[1].stringList, yyDollar[3].stringItem)
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2466
		{
			yyVAL.stringList = yyDollar[2].stringList
		}
	case 315:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:2471
		{

		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2479
		{
			yyVAL.keyword = true
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2483
		{
			yyVAL.keyword = true
		}
	case 318:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:2486
		{
			yyVAL.keyword = false
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2488
		{
			yyVAL.keyword = true
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2492
		{
			yyVAL.keyword = true
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2496
		{
			yyVAL.keyword = true
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2498
		{
			yyVAL.keyword = true
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2502
		{
			yyVAL.keyword = true
		}
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:2505
		{
			yyVAL.keyword = false
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2507
		{
			yyVAL.keyword = true
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2511
		{
			yyVAL.keyword = true
		}
	case 327:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:2514
		{
			yyVAL.keyword = true
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2516
		{
			yyVAL.keyword = false
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2520
		{
			yyVAL.keyword = true
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2524
		{
			yyVAL.keyword = true
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2526
		{
			yyVAL.keyword = true
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2530
		{
			yyVAL.keyword = true
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2534
		{
			yyVAL.keyword = true
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2538
		{
			yyVAL.keyword = true
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2542
		{
			yyVAL.keyword = true
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2546
		{
			yyVAL.keyword = true
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2548
		{
			yyVAL.keyword = true
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2552
		{
			yyVAL.keyword = true
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2556
		{
			yyVAL.keyword = true
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2560
		{
			yyVAL.keyword = true
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2562
		{
			yyVAL.keyword = true
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2566
		{
			yyVAL.keyword = true
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2570
		{
			yyVAL.keyword = true
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2572
		{
			yyVAL.keyword = true
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2574
		{
			yyVAL.keyword = true
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2578
		{
			yyVAL.keyword = true
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2582
		{
			yyVAL.keyword = true
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2584
		{
			yyVAL.keyword = true
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2588
		{
			yyVAL.keyword = true
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2590
		{
			yyVAL.keyword = true
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2594
		{
			yyVAL.keyword = true
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2598
		{
			yyVAL.keyword = true
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2602
		{
			yyVAL.keyword = true
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2606
		{
			yyVAL.keyword = true
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2610
		{
			yyVAL.keyword = true
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2614
		{
			yyVAL.keyword = true
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2618
		{
			yyVAL.keyword = true
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2622
		{
			yyVAL.keyword = true
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2626
		{
			yyVAL.keyword = true
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2630
		{
			yyVAL.keyword = true
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2634
		{
			yyVAL.keyword = true
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2638
		{
			yyVAL.keyword = true
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2642
		{
			yyVAL.keyword = true
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2646
		{
			yyVAL.keyword = true
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2650
		{
			yyVAL.keyword = true
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2654
		{
			yyVAL.keyword = true
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2658
		{
			yyVAL.keyword = true
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2662
		{
			yyVAL.keyword = true
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2666
		{
			yyVAL.keyword = true
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2670
		{
			yyVAL.keyword = true
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2674
		{
			yyVAL.keyword = true
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2678
		{
			yyVAL.keyword = true
		}
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:2681
		{
			yyVAL.keyword = false
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2683
		{
			yyVAL.keyword = true
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2687
		{
			yyVAL.keyword = true
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2691
		{
			yyVAL.keyword = true
		}
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:2694
		{
			yyVAL.keyword = false
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2696
		{
			yyVAL.keyword = true
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2700
		{
			yyVAL.keyword = true
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2702
		{
			yyVAL.keyword = true
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2706
		{
			yyVAL.keyword = true
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2708
		{
			yyVAL.keyword = true
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2712
		{
			yyVAL.keyword = true
		}
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2716
		{
			yyVAL.keyword = true
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2718
		{
			yyVAL.keyword = true
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2722
		{
			yyVAL.keyword = true
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2724
		{
			yyVAL.keyword = true
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2728
		{
			yyVAL.keyword = true
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2730
		{
			yyVAL.keyword = true
		}
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2734
		{
			yyVAL.keyword = true
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2736
		{
			yyVAL.keyword = true
		}
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2740
		{
			yyVAL.keyword = true
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2744
		{
			yyVAL.keyword = true
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2748
		{
			yyVAL.keyword = true
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2752
		{
			yyVAL.keyword = true
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2756
		{
			yyVAL.keyword = true
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2760
		{
			yyVAL.keyword = true
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2764
		{
			yyVAL.keyword = true
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2768
		{
			yyVAL.keyword = true
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2772
		{
			yyVAL.keyword = true
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2776
		{
			yyVAL.keyword = true
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2780
		{
			yyVAL.keyword = true
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2784
		{
			yyVAL.keyword = true
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2788
		{
			yyVAL.keyword = true
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2792
		{
			yyVAL.keyword = true
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2796
		{
			yyVAL.keyword = true
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2800
		{
			yyVAL.keyword = true
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2804
		{
			yyVAL.keyword = true
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2808
		{
			yyVAL.keyword = true
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2812
		{
			yyVAL.keyword = true
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2816
		{
			yyVAL.keyword = true
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2820
		{
			yyVAL.keyword = true
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2824
		{
			yyVAL.keyword = true
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2828
		{
			yyVAL.keyword = true
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2832
		{
			yyVAL.keyword = true
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2836
		{
			yyVAL.keyword = true
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2840
		{
			yyVAL.keyword = true
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2844
		{
			yyVAL.keyword = true
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2848
		{
			yyVAL.keyword = true
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2852
		{
			yyVAL.keyword = true
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2856
		{
			yyVAL.keyword = true
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2860
		{
			yyVAL.keyword = true
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2864
		{
			yyVAL.keyword = true
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2868
		{
			yyVAL.keyword = true
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2872
		{
			yyVAL.keyword = true
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2876
		{
			yyVAL.keyword = true
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2880
		{
			yyVAL.keyword = true
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2884
		{
			yyVAL.keyword = true
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2888
		{
			yyVAL.keyword = true
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2892
		{
			yyVAL.keyword = true
		}
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser/parser.go.y:2895
		{
			yyVAL.keyword = false
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2897
		{
			yyVAL.keyword = true
		}
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2901
		{
			yyVAL.keyword = true
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2903
		{
			yyVAL.keyword = true
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser/parser.go.y:2907
		{
			yyVAL.keyword = true
		}
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser/parser.go.y:2911
		{
			yyVAL.keyword = true
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser/parser.go.y:2915
		{
			yyVAL.keyword = true
		}
	}
	goto yystack /* stack new state and value */
}
